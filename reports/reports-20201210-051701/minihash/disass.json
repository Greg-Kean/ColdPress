{"minihash.exe": {"binwalk": {"0": {"magic": "PE32+ executable (console) x86-64 (stripped to external PDB), for MS Windows", "size": 17920, "sha1": "d1c50a1da68a15ea0998b3644bb65d26398bd208"}}, "filetype": "PE32+ executable (console) x86-64 (stripped to external PDB), for MS Windows", "hashes": {"md5": "fcec376ec3d1a7aacf1ab109b4336213", "sha1": "d1c50a1da68a15ea0998b3644bb65d26398bd208", "sha256": "b8bbf87474aa41bc90f0d38683cf6907b15f711424f5bdae2a9dfdbfbd08dcec", "ssdeep": "384:AOCSjrwK5GCz282Pi+6TRiNNNFd57NhKV:AZgwA2yliNNNF7", "pehash": "cc601275353e40c78379d8c5f7e82ac223fc6c98", "imphash": "0d98c4f22aef1264d564980d8a5c51c7", "machoke": "1:c,c,2;1:2,3;2:3;3:4,6;4:5;5:6;6:;1:41;2:3;3:37;4:5;5:3,6;6:38;7:43;8:9;9:39;10:40;11:12,13;12:13;13:c,c,c,c,c,14,19;14:15;15:16,25;16:17,21;17:18;18:19;19:15,20;20:21;21:22,25;22:23;23:24,25;24:23,25;25:26;26:27,29;27:36;28:29;29:c,30,33;30:31;31:c,c,c,31,32;32:33;33:c,c,44;34:42;35:36;36:37;37:7;38:c,10;39:c,11;40:41;41:42;42:c,43;43:c,44;44:c,c,c,45;1:;1:;1:;1:;1:;1:;1:2,3;2:3;3:c,c,2,4;4:25;5:31;6:7;7:31;8:36;9:10,13;10:11;11:c,12;12:13,19;13:30;14:28;15:11,16;16:35;17:c,13,18;18:19;19:2;20:21;21:22,23;22:23;23:21,24;24:25;25:31;26:7;27:28;28:35;29:c,30;30:c,31;31:2;32:33;33:c,33,34;34:35;35:c,36;36:c,37,38;37:38;38:;1:c,2,5;2:3,5;3:c,4,6;4:5;5:6;6:7;7:8,11;8:c,7,9;9:4;10:11;11:12;12:;1:;1:;1:;1:;1:;1:;1:c,2;2:3,7;3:4,6;4:5;5:5,6;6:7;7:8;8:8,9;9:10;10:11,12;11:12;12:;1:;1:c,c,c,c,c,c,c,2;2:3;3:c,c,4,5;4:5;5:6;6:3;7:8;8:2;9:c,c,c,c,c,10;10:c,11;11:10,12;12:;1:;1:;1:;1:;1:;1:c,2;2:3;3:2,4;4:;1:;1:;1:;1:;1:;1:;1:18;2:3,7;3:4,11;4:5,10;5:6;6:7;7:6,8;8:6,9;9:c,10;10:11;11:12,13;12:c,13;13:6,14;14:15,17;15:16;16:c,16,17;17:18;18:c,19;1:c,2;1:;1:;1:;1:2,9;2:c,3,9;3:4,8;4:5;5:6,7;6:7,9;7:5,8;8:9;9:;1:2,3;2:c,3;3:;1:2,3;2:3;3:;1:c,c,c,c,c,2;1:2,4;2:c,3,4;3:4;4:;1:2,3;2:2,3;3:;1:22;2:3;3:4,5;4:11;5:3,6;6:c,25;7:c,26;8:9,10;9:20;10:11;11:12,16;12:23;13:14,15;14:24;15:16;16:15,17;17:18;18:18,19;19:20;20:10;21:c,22;22:23;23:24;24:25;25:c,26;26:c,27;1:;1:c,2,9;2:3,8;3:c,4,8;4:5,9;5:6;6:7,9;7:c,6,8;8:9;9:;1:2,10;2:c,3,10;3:4,9;4:5;5:6,8;6:7,10;7:8;8:5,9;9:10;10:;1:;1:;1:2,7;2:3;3:4,6;4:5,6;5:6;6:3,7;7:;1:;"}, "disassembly": "\n__fastcall FUN_00401180()\n .text:0000000000401180 41 55                          PUSH R13\n .text:0000000000401182 41 54                          PUSH R12\n .text:0000000000401184 55                             PUSH RBP\n .text:0000000000401185 57                             PUSH RDI\n .text:0000000000401186 56                             PUSH RSI\n .text:0000000000401187 53                             PUSH RBX\n .text:0000000000401188 48 81 ec 98 00 00 00           SUB RSP,0x98\n .text:000000000040118f b9 0d 00 00 00                 MOV ECX,0xd\n .text:0000000000401194 31 c0                          XOR EAX,EAX\n .text:0000000000401196 4c 8d 44 24 20                 LEA R8,[RSP + 0x20]\n .text:000000000040119b 4c 89 c7                       MOV RDI,R8\n .text:000000000040119e f3 48 ab                       STOSQ.REP RDI\n .text:00000000004011a1 48 8b 3d 88 43 00 00           MOV RDI,qword ptr [0x00405530]\n .text:00000000004011a8 44 8b 0f                       MOV R9D,dword ptr [RDI]\n .text:00000000004011ab 45 85 c9                       TEST R9D,R9D\n .text:00000000004011ae 0f 85 ac 02 00 00              JNZ 0x00401460\n .text:00000000004011b4 65 48 8b 04 25 30 00 00 00     MOV RAX,qword ptr GS:[0x30]\n .text:00000000004011bd 48 8b 1d bc 42 00 00           MOV RBX,qword ptr [0x00405480]\n .text:00000000004011c4 48 8b 70 08                    MOV RSI,qword ptr [RAX + 0x8]\n .text:00000000004011c8 31 ed                          XOR EBP,EBP\n .text:00000000004011ca 4c 8b 25 ab 80 00 00           MOV R12,qword ptr [0x0040927c]\n .text:00000000004011d1 eb 16                          JMP 0x004011e9\n .text:00000000004011d8 48 39 c6                       CMP RSI,RAX\n .text:00000000004011db 0f 84 1f 02 00 00              JZ 0x00401400\n .text:00000000004011e1 b9 e8 03 00 00                 MOV ECX,0x3e8\n .text:00000000004011e6 41 ff d4                       CALL R12\n .text:00000000004011e9 48 89 e8                       MOV RAX,RBP\n .text:00000000004011ec f0                             LOCK\n .text:00000000004011ed 48 0f b1 33                    CMPXCHG qword ptr [RBX],RSI\n .text:00000000004011f1 48 85 c0                       TEST RAX,RAX\n .text:00000000004011f4 75 e2                          JNZ 0x004011d8\n .text:00000000004011f6 48 8b 35 93 42 00 00           MOV RSI,qword ptr [0x00405490]\n .text:00000000004011fd 31 ed                          XOR EBP,EBP\n .text:00000000004011ff 8b 06                          MOV EAX,dword ptr [RSI]\n .text:0000000000401201 83 f8 01                       CMP EAX,0x1\n .text:0000000000401204 0f 84 0d 02 00 00              JZ 0x00401417\n .text:000000000040120a 8b 06                          MOV EAX,dword ptr [RSI]\n .text:000000000040120c 85 c0                          TEST EAX,EAX\n .text:000000000040120e 0f 84 7c 02 00 00              JZ 0x00401490\n .text:0000000000401214 c7 05 ea 6d 00 00 01 00 00 00  MOV dword ptr [0x00408008],0x1\n .text:000000000040121e 8b 06                          MOV EAX,dword ptr [RSI]\n .text:0000000000401220 83 f8 01                       CMP EAX,0x1\n .text:0000000000401223 0f 84 03 02 00 00              JZ 0x0040142c\n .text:0000000000401229 85 ed                          TEST EBP,EBP\n .text:000000000040122b 0f 84 1c 02 00 00              JZ 0x0040144d\n .text:0000000000401231 48 8b 05 e8 41 00 00           MOV RAX,qword ptr [0x00405420]\n .text:0000000000401238 48 8b 00                       MOV RAX,qword ptr [RAX]\n .text:000000000040123b 48 85 c0                       TEST RAX,RAX\n .text:000000000040123e 74 0c                          JZ 0x0040124c\n .text:0000000000401240 45 31 c0                       XOR R8D,R8D\n .text:0000000000401243 ba 02 00 00 00                 MOV EDX,0x2\n .text:0000000000401248 31 c9                          XOR ECX,ECX\n .text:000000000040124a ff d0                          CALL RAX\n .text:000000000040124c e8 9f 0d 00 00                 CALL 0x00401ff0\n .text:0000000000401251 48 8d 0d a8 13 00 00           LEA RCX,[0x402600]\n .text:0000000000401258 ff 15 16 80 00 00              CALL qword ptr [0x00409274]\n .text:000000000040125e 48 8b 15 0b 42 00 00           MOV RDX,qword ptr [0x00405470]\n .text:0000000000401265 48 89 02                       MOV qword ptr [RDX],RAX\n .text:0000000000401268 e8 93 12 00 00                 CALL 0x00402500\n .text:000000000040126d 48 8d 0d 8c fd ff ff           LEA RCX,[0x401000]\n .text:0000000000401274 e8 b7 1c 00 00                 CALL 0x00402f30\n .text:0000000000401279 e8 e2 0a 00 00                 CALL 0x00401d60\n .text:000000000040127e 48 8b 05 ab 41 00 00           MOV RAX,qword ptr [0x00405430]\n .text:0000000000401285 48 89 05 dc 76 00 00           MOV qword ptr [0x00408968],RAX\n .text:000000000040128c e8 af 1c 00 00                 CALL 0x00402f40\n .text:0000000000401291 31 c9                          XOR ECX,ECX\n .text:0000000000401293 48 8b 00                       MOV RAX,qword ptr [RAX]\n .text:0000000000401296 48 85 c0                       TEST RAX,RAX\n .text:0000000000401299 75 17                          JNZ 0x004012b2\n .text:000000000040129b eb 53                          JMP 0x004012f0\n .text:00000000004012a0 84 d2                          TEST DL,DL\n .text:00000000004012a2 74 45                          JZ 0x004012e9\n .text:00000000004012a4 83 e1 01                       AND ECX,0x1\n .text:00000000004012a7 74 27                          JZ 0x004012d0\n .text:00000000004012a9 b9 01 00 00 00                 MOV ECX,0x1\n .text:00000000004012ae 48 83 c0 01                    ADD RAX,0x1\n .text:00000000004012b2 0f b6 10                       MOVZX EDX,byte ptr [RAX]\n .text:00000000004012b5 80 fa 20                       CMP DL,0x20\n .text:00000000004012b8 7e e6                          JLE 0x004012a0\n .text:00000000004012ba 41 89 c8                       MOV R8D,ECX\n .text:00000000004012bd 41 83 f0 01                    XOR R8D,0x1\n .text:00000000004012c1 80 fa 22                       CMP DL,0x22\n .text:00000000004012c4 41 0f 44 c8                    CMOVZ ECX,R8D\n .text:00000000004012c8 eb e4                          JMP 0x004012ae\n .text:00000000004012d0 84 d2                          TEST DL,DL\n .text:00000000004012d2 74 15                          JZ 0x004012e9\n .text:00000000004012d4 0f 1f 40 00                    NOP dword ptr [RAX]\n .text:00000000004012d8 0f b6 50 01                    MOVZX EDX,byte ptr [RAX + 0x1]\n .text:00000000004012dc 48 83 c0 01                    ADD RAX,0x1\n .text:00000000004012e0 84 d2                          TEST DL,DL\n .text:00000000004012e2 74 05                          JZ 0x004012e9\n .text:00000000004012e4 80 fa 20                       CMP DL,0x20\n .text:00000000004012e7 7e ef                          JLE 0x004012d8\n .text:00000000004012e9 48 89 05 70 76 00 00           MOV qword ptr [0x00408960],RAX\n .text:00000000004012f0 44 8b 07                       MOV R8D,dword ptr [RDI]\n .text:00000000004012f3 45 85 c0                       TEST R8D,R8D\n .text:00000000004012f6 74 16                          JZ 0x0040130e\n .text:00000000004012f8 b8 0a 00 00 00                 MOV EAX,0xa\n .text:00000000004012fd f6 44 24 5c 01                 TEST byte ptr [RSP + 0x5c],0x1\n .text:0000000000401302 0f 85 e8 00 00 00              JNZ 0x004013f0\n .text:0000000000401308 89 05 f2 2c 00 00              MOV dword ptr [0x00404000],EAX\n .text:000000000040130e 8b 1d 14 6d 00 00              MOV EBX,dword ptr [0x00408028]\n .text:0000000000401314 44 8d 63 01                    LEA R12D,[RBX + 0x1]\n .text:0000000000401318 4d 63 e4                       MOVSXD R12,R12D\n .text:000000000040131b 49 c1 e4 03                    SHL R12,0x3\n .text:000000000040131f 4c 89 e1                       MOV RCX,R12\n .text:0000000000401322 e8 49 1b 00 00                 CALL 0x00402e70\n .text:0000000000401327 4c 8b 2d f2 6c 00 00           MOV R13,qword ptr [0x00408020]\n .text:000000000040132e 48 89 c7                       MOV RDI,RAX\n .text:0000000000401331 85 db                          TEST EBX,EBX\n .text:0000000000401333 7e 46                          JLE 0x0040137b\n .text:0000000000401335 8d 6b ff                       LEA EBP,[RBX + -0x1]\n .text:0000000000401338 31 db                          XOR EBX,EBX\n .text:000000000040133a 66 0f 1f 44 00 00              NOP word ptr [RAX + RAX*0x1]\n .text:0000000000401340 49 8b 4c dd 00                 MOV RCX,qword ptr [R13 + RBX*0x8]\n .text:0000000000401345 e8 f6 1a 00 00                 CALL 0x00402e40\n .text:000000000040134a 48 8d 70 01                    LEA RSI,[RAX + 0x1]\n .text:000000000040134e 48 89 f1                       MOV RCX,RSI\n .text:0000000000401351 e8 1a 1b 00 00                 CALL 0x00402e70\n .text:0000000000401356 49 89 f0                       MOV R8,RSI\n .text:0000000000401359 48 89 04 df                    MOV qword ptr [RDI + RBX*0x8],RAX\n .text:000000000040135d 49 8b 54 dd 00                 MOV RDX,qword ptr [R13 + RBX*0x8]\n .text:0000000000401362 48 89 c1                       MOV RCX,RAX\n .text:0000000000401365 e8 fe 1a 00 00                 CALL 0x00402e68\n .text:000000000040136a 48 89 d8                       MOV RAX,RBX\n .text:000000000040136d 48 83 c3 01                    ADD RBX,0x1\n .text:0000000000401371 48 39 c5                       CMP RBP,RAX\n .text:0000000000401374 75 ca                          JNZ 0x00401340\n .text:0000000000401376 4a 8d 44 27 f8                 LEA RAX,[RDI + R12*0x1 + -0x8]\n .text:000000000040137b 48 c7 00 00 00 00 00           MOV qword ptr [RAX],0x0\n .text:0000000000401382 48 89 3d 97 6c 00 00           MOV qword ptr [0x00408020],RDI\n .text:0000000000401389 e8 e2 05 00 00                 CALL 0x00401970\n .text:000000000040138e 48 8b 05 ab 40 00 00           MOV RAX,qword ptr [0x00405440]\n .text:0000000000401395 4c 8b 05 7c 6c 00 00           MOV R8,qword ptr [0x00408018]\n .text:000000000040139c 8b 0d 86 6c 00 00              MOV ECX,dword ptr [0x00408028]\n .text:00000000004013a2 48 8b 00                       MOV RAX,qword ptr [RAX]\n .text:00000000004013a5 4c 89 00                       MOV qword ptr [RAX],R8\n .text:00000000004013a8 48 8b 15 71 6c 00 00           MOV RDX,qword ptr [0x00408020]\n .text:00000000004013af e8 55 02 00 00                 CALL 0x00401609\n .text:00000000004013b4 8b 0d 52 6c 00 00              MOV ECX,dword ptr [0x0040800c]\n .text:00000000004013ba 89 05 50 6c 00 00              MOV dword ptr [0x00408010],EAX\n .text:00000000004013c0 85 c9                          TEST ECX,ECX\n .text:00000000004013c2 0f 84 e6 00 00 00              JZ 0x004014ae\n .text:00000000004013c8 8b 15 3a 6c 00 00              MOV EDX,dword ptr [0x00408008]\n .text:00000000004013ce 85 d2                          TEST EDX,EDX\n .text:00000000004013d0 0f 84 9a 00 00 00              JZ 0x00401470\n .text:00000000004013d6 48 81 c4 98 00 00 00           ADD RSP,0x98\n .text:00000000004013dd 5b                             POP RBX\n .text:00000000004013de 5e                             POP RSI\n .text:00000000004013df 5f                             POP RDI\n .text:00000000004013e0 5d                             POP RBP\n .text:00000000004013e1 41 5c                          POP R12\n .text:00000000004013e3 41 5d                          POP R13\n .text:00000000004013e5 c3                             RET\n .text:00000000004013f0 0f b7 44 24 60                 MOVZX EAX,word ptr [RSP + 0x60]\n .text:00000000004013f5 e9 0e ff ff ff                 JMP 0x00401308\n .text:0000000000401400 48 8b 35 89 40 00 00           MOV RSI,qword ptr [0x00405490]\n .text:0000000000401407 bd 01 00 00 00                 MOV EBP,0x1\n .text:000000000040140c 8b 06                          MOV EAX,dword ptr [RSI]\n .text:000000000040140e 83 f8 01                       CMP EAX,0x1\n .text:0000000000401411 0f 85 f3 fd ff ff              JNZ 0x0040120a\n .text:0000000000401417 b9 1f 00 00 00                 MOV ECX,0x1f\n .text:000000000040141c e8 af 1a 00 00                 CALL 0x00402ed0\n .text:0000000000401421 8b 06                          MOV EAX,dword ptr [RSI]\n .text:0000000000401423 83 f8 01                       CMP EAX,0x1\n .text:0000000000401426 0f 85 fd fd ff ff              JNZ 0x00401229\n .text:000000000040142c 48 8b 15 7d 40 00 00           MOV RDX,qword ptr [0x004054b0]\n .text:0000000000401433 48 8b 0d 66 40 00 00           MOV RCX,qword ptr [0x004054a0]\n .text:000000000040143a e8 81 1a 00 00                 CALL 0x00402ec0\n .text:000000000040143f c7 06 02 00 00 00              MOV dword ptr [RSI],0x2\n .text:0000000000401445 85 ed                          TEST EBP,EBP\n .text:0000000000401447 0f 85 e4 fd ff ff              JNZ 0x00401231\n .text:000000000040144d 31 c0                          XOR EAX,EAX\n .text:000000000040144f 48 87 03                       XCHG qword ptr [RBX],RAX\n .text:0000000000401452 e9 da fd ff ff                 JMP 0x00401231\n .text:0000000000401460 4c 89 c1                       MOV RCX,R8\n .text:0000000000401463 ff 15 bb 7d 00 00              CALL qword ptr [0x00409224]\n .text:0000000000401469 e9 46 fd ff ff                 JMP 0x004011b4\n .text:0000000000401470 e8 53 1a 00 00                 CALL 0x00402ec8\n .text:0000000000401475 8b 05 95 6b 00 00              MOV EAX,dword ptr [0x00408010]\n .text:000000000040147b 48 81 c4 98 00 00 00           ADD RSP,0x98\n .text:0000000000401482 5b                             POP RBX\n .text:0000000000401483 5e                             POP RSI\n .text:0000000000401484 5f                             POP RDI\n .text:0000000000401485 5d                             POP RBP\n .text:0000000000401486 41 5c                          POP R12\n .text:0000000000401488 41 5d                          POP R13\n .text:000000000040148a c3                             RET\n .text:0000000000401490 48 8b 15 39 40 00 00           MOV RDX,qword ptr [0x004054d0]\n .text:0000000000401497 48 8b 0d 22 40 00 00           MOV RCX,qword ptr [0x004054c0]\n .text:000000000040149e c7 06 01 00 00 00              MOV dword ptr [RSI],0x1\n .text:00000000004014a4 e8 17 1a 00 00                 CALL 0x00402ec0\n .text:00000000004014a9 e9 70 fd ff ff                 JMP 0x0040121e\n .text:00000000004014ae 89 c1                          MOV ECX,EAX\n .text:00000000004014b0 e8 eb 19 00 00                 CALL 0x00402ea0\n\n__fastcall entry()\n .text:00000000004014f0 48 83 ec 28                    SUB RSP,0x28\n .text:00000000004014f4 48 8b 05 35 40 00 00           MOV RAX,qword ptr [0x00405530]\n .text:00000000004014fb c7 00 00 00 00 00              MOV dword ptr [RAX],0x0\n .text:0000000000401501 e8 aa 04 00 00                 CALL 0x004019b0\n .text:0000000000401506 e8 75 fc ff ff                 CALL 0x00401180\n .text:000000000040150b 90                             NOP\n .text:000000000040150c 90                             NOP\n .text:000000000040150d 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000401511 c3                             RET\n\n__fastcall FUN_00401560(longlong param_1, ulonglong param_2)\n .text:0000000000401560 55                             PUSH RBP\n .text:0000000000401561 48 89 e5                       MOV RBP,RSP\n .text:0000000000401564 48 83 ec 30                    SUB RSP,0x30\n .text:0000000000401568 48 89 4d 10                    MOV qword ptr [RBP + 0x10],RCX\n .text:000000000040156c 48 89 55 18                    MOV qword ptr [RBP + 0x18],RDX\n .text:0000000000401570 b9 08 00 00 00                 MOV ECX,0x8\n .text:0000000000401575 e8 f6 18 00 00                 CALL 0x00402e70\n .text:000000000040157a 48 89 45 f0                    MOV qword ptr [RBP + -0x10],RAX\n .text:000000000040157e 48 c7 45 f0 01 00 00 00        MOV qword ptr [RBP + -0x10],0x1\n .text:0000000000401586 48 c7 45 f8 00 00 00 00        MOV qword ptr [RBP + -0x8],0x0\n .text:000000000040158e eb 65                          JMP 0x004015f5\n .text:0000000000401590 48 8b 55 10                    MOV RDX,qword ptr [RBP + 0x10]\n .text:0000000000401594 48 8b 45 f8                    MOV RAX,qword ptr [RBP + -0x8]\n .text:0000000000401598 48 01 d0                       ADD RAX,RDX\n .text:000000000040159b 0f b6 00                       MOVZX EAX,byte ptr [RAX]\n .text:000000000040159e 0f be c0                       MOVSX EAX,AL\n .text:00000000004015a1 69 c0 ef be ad de              IMUL EAX,EAX,-0x21524111\n .text:00000000004015a7 89 c2                          MOV EDX,EAX\n .text:00000000004015a9 48 8b 45 f0                    MOV RAX,qword ptr [RBP + -0x10]\n .text:00000000004015ad 48 01 d0                       ADD RAX,RDX\n .text:00000000004015b0 48 89 45 f0                    MOV qword ptr [RBP + -0x10],RAX\n .text:00000000004015b4 48 8b 4d f0                    MOV RCX,qword ptr [RBP + -0x10]\n .text:00000000004015b8 48 ba cd d7 ee f7 2a 2d e8 6f  MOV RDX,0x6fe82d2af7eed7cd\n .text:00000000004015c2 48 89 c8                       MOV RAX,RCX\n .text:00000000004015c5 48 f7 e2                       MUL RDX\n .text:00000000004015c8 48 89 c8                       MOV RAX,RCX\n .text:00000000004015cb 48 29 d0                       SUB RAX,RDX\n .text:00000000004015ce 48 d1 e8                       SHR RAX,1\n .text:00000000004015d1 48 01 d0                       ADD RAX,RDX\n .text:00000000004015d4 48 c1 e8 33                    SHR RAX,0x33\n .text:00000000004015d8 48 ba 39 9c 2e af 1c 22 0b 00  MOV RDX,0xb221caf2e9c39\n .text:00000000004015e2 48 0f af c2                    IMUL RAX,RDX\n .text:00000000004015e6 48 29 c1                       SUB RCX,RAX\n .text:00000000004015e9 48 89 c8                       MOV RAX,RCX\n .text:00000000004015ec 48 89 45 f0                    MOV qword ptr [RBP + -0x10],RAX\n .text:00000000004015f0 48 83 45 f8 01                 ADD qword ptr [RBP + -0x8],0x1\n .text:00000000004015f5 48 8b 45 f8                    MOV RAX,qword ptr [RBP + -0x8]\n .text:00000000004015f9 48 3b 45 18                    CMP RAX,qword ptr [RBP + 0x18]\n .text:00000000004015fd 72 91                          JC 0x00401590\n .text:00000000004015ff 48 8b 45 f0                    MOV RAX,qword ptr [RBP + -0x10]\n .text:0000000000401603 48 83 c4 30                    ADD RSP,0x30\n .text:0000000000401607 5d                             POP RBP\n .text:0000000000401608 c3                             RET\n\n__fastcall FUN_00401609()\n .text:0000000000401609 55                             PUSH RBP\n .text:000000000040160a 57                             PUSH RDI\n .text:000000000040160b 56                             PUSH RSI\n .text:000000000040160c 48 81 ec d0 03 00 00           SUB RSP,0x3d0\n .text:0000000000401613 48 8d ac 24 80 00 00 00        LEA RBP,[RSP + 0x80]\n .text:000000000040161b e8 50 03 00 00                 CALL 0x00401970\n .text:0000000000401620 48 8d 0d d9 39 00 00           LEA RCX,[0x405000]\n .text:0000000000401627 e8 2c 18 00 00                 CALL 0x00402e58\n .text:000000000040162c ba 0b 00 00 00                 MOV EDX,0xb\n .text:0000000000401631 48 8d 0d ee 39 00 00           LEA RCX,[0x405026]\n .text:0000000000401638 e8 23 ff ff ff                 CALL 0x00401560\n .text:000000000040163d 48 89 c2                       MOV RDX,RAX\n .text:0000000000401640 48 8d 0d f1 39 00 00           LEA RCX,[0x405038]\n .text:0000000000401647 e8 14 18 00 00                 CALL 0x00402e60\n .text:000000000040164c ba 0c 00 00 00                 MOV EDX,0xc\n .text:0000000000401651 48 8d 0d 01 3a 00 00           LEA RCX,[0x405059]\n .text:0000000000401658 e8 03 ff ff ff                 CALL 0x00401560\n .text:000000000040165d 48 89 c2                       MOV RDX,RAX\n .text:0000000000401660 48 8d 0d 01 3a 00 00           LEA RCX,[0x405068]\n .text:0000000000401667 e8 f4 17 00 00                 CALL 0x00402e60\n .text:000000000040166c 48 c7 85 38 03 00 00 6d a6 02 11 MOV qword ptr [RBP + 0x338],0x1102a66d\n .text:0000000000401677 48 c7 85 30 03 00 00 6c 76 d4 04 MOV qword ptr [RBP + 0x330],0x4d4766c\n .text:0000000000401682 b8 e4 6d 42 fa                 MOV EAX,0xfa426de4\n .text:0000000000401687 48 89 85 28 03 00 00           MOV qword ptr [RBP + 0x328],RAX\n .text:000000000040168e b8 b1 aa 4b 96                 MOV EAX,0x964baab1\n .text:0000000000401693 48 89 85 20 03 00 00           MOV qword ptr [RBP + 0x320],RAX\n .text:000000000040169a 48 8b 85 38 03 00 00           MOV RAX,qword ptr [RBP + 0x338]\n .text:00000000004016a1 48 89 85 d0 02 00 00           MOV qword ptr [RBP + 0x2d0],RAX\n .text:00000000004016a8 48 8b 85 30 03 00 00           MOV RAX,qword ptr [RBP + 0x330]\n .text:00000000004016af 48 89 85 d8 02 00 00           MOV qword ptr [RBP + 0x2d8],RAX\n .text:00000000004016b6 48 8b 85 28 03 00 00           MOV RAX,qword ptr [RBP + 0x328]\n .text:00000000004016bd 48 89 85 e0 02 00 00           MOV qword ptr [RBP + 0x2e0],RAX\n .text:00000000004016c4 48 8b 85 20 03 00 00           MOV RAX,qword ptr [RBP + 0x320]\n .text:00000000004016cb 48 89 85 e8 02 00 00           MOV qword ptr [RBP + 0x2e8],RAX\n .text:00000000004016d2 b9 0a 00 00 00                 MOV ECX,0xa\n .text:00000000004016d7 e8 94 17 00 00                 CALL 0x00402e70\n .text:00000000004016dc 48 89 85 18 03 00 00           MOV qword ptr [RBP + 0x318],RAX\n .text:00000000004016e3 c7 85 4c 03 00 00 00 00 00 00  MOV dword ptr [RBP + 0x34c],0x0\n .text:00000000004016ed e9 a9 00 00 00                 JMP 0x0040179b\n .text:00000000004016f2 c7 85 48 03 00 00 41 00 00 00  MOV dword ptr [RBP + 0x348],0x41\n .text:00000000004016fc e9 86 00 00 00                 JMP 0x00401787\n .text:0000000000401701 b9 04 00 00 00                 MOV ECX,0x4\n .text:0000000000401706 e8 65 17 00 00                 CALL 0x00402e70\n .text:000000000040170b 48 89 85 f8 02 00 00           MOV qword ptr [RBP + 0x2f8],RAX\n .text:0000000000401712 8b 85 48 03 00 00              MOV EAX,dword ptr [RBP + 0x348]\n .text:0000000000401718 89 c2                          MOV EDX,EAX\n .text:000000000040171a 48 8b 85 f8 02 00 00           MOV RAX,qword ptr [RBP + 0x2f8]\n .text:0000000000401721 88 10                          MOV byte ptr [RAX],DL\n .text:0000000000401723 48 8b 85 f8 02 00 00           MOV RAX,qword ptr [RBP + 0x2f8]\n .text:000000000040172a 48 83 c0 01                    ADD RAX,0x1\n .text:000000000040172e c6 00 00                       MOV byte ptr [RAX],0x0\n .text:0000000000401731 48 8b 85 f8 02 00 00           MOV RAX,qword ptr [RBP + 0x2f8]\n .text:0000000000401738 ba 01 00 00 00                 MOV EDX,0x1\n .text:000000000040173d 48 89 c1                       MOV RCX,RAX\n .text:0000000000401740 e8 1b fe ff ff                 CALL 0x00401560\n .text:0000000000401745 48 89 85 f0 02 00 00           MOV qword ptr [RBP + 0x2f0],RAX\n .text:000000000040174c 8b 85 4c 03 00 00              MOV EAX,dword ptr [RBP + 0x34c]\n .text:0000000000401752 48 98                          CDQE\n .text:0000000000401754 48 8b 84 c5 d0 02 00 00        MOV RAX,qword ptr [RBP + RAX*0x8 + 0x2d0]\n .text:000000000040175c 48 39 85 f0 02 00 00           CMP qword ptr [RBP + 0x2f0],RAX\n .text:0000000000401763 75 1b                          JNZ 0x00401780\n .text:0000000000401765 8b 85 4c 03 00 00              MOV EAX,dword ptr [RBP + 0x34c]\n .text:000000000040176b 48 63 d0                       MOVSXD RDX,EAX\n .text:000000000040176e 48 8b 85 18 03 00 00           MOV RAX,qword ptr [RBP + 0x318]\n .text:0000000000401775 48 01 d0                       ADD RAX,RDX\n .text:0000000000401778 8b 95 48 03 00 00              MOV EDX,dword ptr [RBP + 0x348]\n .text:000000000040177e 88 10                          MOV byte ptr [RAX],DL\n .text:0000000000401780 83 85 48 03 00 00 01           ADD dword ptr [RBP + 0x348],0x1\n .text:0000000000401787 83 bd 48 03 00 00 59           CMP dword ptr [RBP + 0x348],0x59\n .text:000000000040178e 0f 8e 6d ff ff ff              JLE 0x00401701\n .text:0000000000401794 83 85 4c 03 00 00 01           ADD dword ptr [RBP + 0x34c],0x1\n .text:000000000040179b 83 bd 4c 03 00 00 03           CMP dword ptr [RBP + 0x34c],0x3\n .text:00000000004017a2 0f 8e 4a ff ff ff              JLE 0x004016f2\n .text:00000000004017a8 8b 85 4c 03 00 00              MOV EAX,dword ptr [RBP + 0x34c]\n .text:00000000004017ae 48 63 d0                       MOVSXD RDX,EAX\n .text:00000000004017b1 48 8b 85 18 03 00 00           MOV RAX,qword ptr [RBP + 0x318]\n .text:00000000004017b8 48 01 d0                       ADD RAX,RDX\n .text:00000000004017bb c6 00 00                       MOV byte ptr [RAX],0x0\n .text:00000000004017be 48 8b 85 18 03 00 00           MOV RAX,qword ptr [RBP + 0x318]\n .text:00000000004017c5 48 89 c1                       MOV RCX,RAX\n .text:00000000004017c8 e8 ab 16 00 00                 CALL 0x00402e78\n .text:00000000004017cd 48 89 85 10 03 00 00           MOV qword ptr [RBP + 0x310],RAX\n .text:00000000004017d4 48 8b 85 10 03 00 00           MOV RAX,qword ptr [RBP + 0x310]\n .text:00000000004017db 48 89 c1                       MOV RCX,RAX\n .text:00000000004017de e8 5d 16 00 00                 CALL 0x00402e40\n .text:00000000004017e3 48 83 c0 32                    ADD RAX,0x32\n .text:00000000004017e7 48 89 c1                       MOV RCX,RAX\n .text:00000000004017ea e8 81 16 00 00                 CALL 0x00402e70\n .text:00000000004017ef 48 89 85 08 03 00 00           MOV qword ptr [RBP + 0x308],RAX\n .text:00000000004017f6 4c 8b 85 18 03 00 00           MOV R8,qword ptr [RBP + 0x318]\n .text:00000000004017fd 48 8b 8d 10 03 00 00           MOV RCX,qword ptr [RBP + 0x310]\n .text:0000000000401804 48 8b 85 08 03 00 00           MOV RAX,qword ptr [RBP + 0x308]\n .text:000000000040180b 48 8b 95 18 03 00 00           MOV RDX,qword ptr [RBP + 0x318]\n .text:0000000000401812 48 89 54 24 20                 MOV qword ptr [RSP + 0x20],RDX\n .text:0000000000401817 4d 89 c1                       MOV R9,R8\n .text:000000000040181a 49 89 c8                       MOV R8,RCX\n .text:000000000040181d 48 8d 15 66 38 00 00           LEA RDX,[0x40508a]\n .text:0000000000401824 48 89 c1                       MOV RCX,RAX\n .text:0000000000401827 e8 1c 16 00 00                 CALL 0x00402e48\n .text:000000000040182c 48 8b 85 08 03 00 00           MOV RAX,qword ptr [RBP + 0x308]\n .text:0000000000401833 48 8d 15 59 38 00 00           LEA RDX,[0x405093]\n .text:000000000040183a 48 89 c1                       MOV RCX,RAX\n .text:000000000040183d e8 56 16 00 00                 CALL 0x00402e98\n .text:0000000000401842 48 89 85 00 03 00 00           MOV qword ptr [RBP + 0x300],RAX\n .text:0000000000401849 48 8d 45 b0                    LEA RAX,[RBP + -0x50]\n .text:000000000040184d 48 8d 15 cc 27 00 00           LEA RDX,[0x404020]\n .text:0000000000401854 b9 63 00 00 00                 MOV ECX,0x63\n .text:0000000000401859 48 89 c7                       MOV RDI,RAX\n .text:000000000040185c 48 89 d6                       MOV RSI,RDX\n .text:000000000040185f f3 48 a5                       MOVSQ.REP RDI,RSI\n .text:0000000000401862 c7 85 44 03 00 00 00 00 00 00  MOV dword ptr [RBP + 0x344],0x0\n .text:000000000040186c eb 2d                          JMP 0x0040189b\n .text:000000000040186e 8b 85 44 03 00 00              MOV EAX,dword ptr [RBP + 0x344]\n .text:0000000000401874 48 98                          CDQE\n .text:0000000000401876 48 8b 54 c5 b0                 MOV RDX,qword ptr [RBP + RAX*0x8 + -0x50]\n .text:000000000040187b 48 8b 85 00 03 00 00           MOV RAX,qword ptr [RBP + 0x300]\n .text:0000000000401882 49 89 d0                       MOV R8,RDX\n .text:0000000000401885 48 8d 15 09 38 00 00           LEA RDX,[0x405095]\n .text:000000000040188c 48 89 c1                       MOV RCX,RAX\n .text:000000000040188f e8 fc 15 00 00                 CALL 0x00402e90\n .text:0000000000401894 83 85 44 03 00 00 01           ADD dword ptr [RBP + 0x344],0x1\n .text:000000000040189b 8b 85 44 03 00 00              MOV EAX,dword ptr [RBP + 0x344]\n .text:00000000004018a1 83 f8 62                       CMP EAX,0x62\n .text:00000000004018a4 76 c8                          JBE 0x0040186e\n .text:00000000004018a6 b8 00 00 00 00                 MOV EAX,0x0\n .text:00000000004018ab 48 81 c4 d0 03 00 00           ADD RSP,0x3d0\n .text:00000000004018b2 5e                             POP RSI\n .text:00000000004018b3 5f                             POP RDI\n .text:00000000004018b4 5d                             POP RBP\n .text:00000000004018b5 c3                             RET\n\n__fastcall FUN_004018c0()\n .text:00000000004018c0 48 83 ec 28                    SUB RSP,0x28\n .text:00000000004018c4 48 8b 05 75 2a 00 00           MOV RAX,qword ptr [0x00404340]\n .text:00000000004018cb 48 8b 00                       MOV RAX,qword ptr [RAX]\n .text:00000000004018ce 48 85 c0                       TEST RAX,RAX\n .text:00000000004018d1 74 22                          JZ 0x004018f5\n .text:00000000004018d3 0f 1f 44 00 00                 NOP dword ptr [RAX + RAX*0x1]\n .text:00000000004018d8 ff d0                          CALL RAX\n .text:00000000004018da 48 8b 05 5f 2a 00 00           MOV RAX,qword ptr [0x00404340]\n .text:00000000004018e1 48 8d 50 08                    LEA RDX,[RAX + 0x8]\n .text:00000000004018e5 48 8b 40 08                    MOV RAX,qword ptr [RAX + 0x8]\n .text:00000000004018e9 48 89 15 50 2a 00 00           MOV qword ptr [0x00404340],RDX\n .text:00000000004018f0 48 85 c0                       TEST RAX,RAX\n .text:00000000004018f3 75 e3                          JNZ 0x004018d8\n .text:00000000004018f5 48 83 c4 28                    ADD RSP,0x28\n .text:00000000004018f9 c3                             RET\n\n__fastcall FUN_00401970()\n .text:0000000000401970 8b 05 ba 66 00 00              MOV EAX,dword ptr [0x00408030]\n .text:0000000000401976 85 c0                          TEST EAX,EAX\n .text:0000000000401978 74 06                          JZ 0x00401980\n .text:000000000040197a c3                             RET\n .text:0000000000401980 c7 05 a6 66 00 00 01 00 00 00  MOV dword ptr [0x00408030],0x1\n .text:000000000040198a e9 71 ff ff ff                 JMP 0x00401900\n\n__fastcall FUN_004019a0()\n .text:00000000004019a0 31 c0                          XOR EAX,EAX\n .text:00000000004019a2 c3                             RET\n\n__fastcall FUN_004019b0()\n .text:00000000004019b0 41 54                          PUSH R12\n .text:00000000004019b2 55                             PUSH RBP\n .text:00000000004019b3 57                             PUSH RDI\n .text:00000000004019b4 56                             PUSH RSI\n .text:00000000004019b5 53                             PUSH RBX\n .text:00000000004019b6 48 83 ec 30                    SUB RSP,0x30\n .text:00000000004019ba 48 8b 1d 0f 2a 00 00           MOV RBX,qword ptr [0x004043d0]\n .text:00000000004019c1 48 b8 32 a2 df 2d 99 2b 00 00  MOV RAX,0x2b992ddfa232\n .text:00000000004019cb 48 c7 44 24 20 00 00 00 00     MOV qword ptr [RSP + 0x20],0x0\n .text:00000000004019d4 48 39 c3                       CMP RBX,RAX\n .text:00000000004019d7 74 17                          JZ 0x004019f0\n .text:00000000004019d9 48 f7 d3                       NOT RBX\n .text:00000000004019dc 48 89 1d fd 29 00 00           MOV qword ptr [0x004043e0],RBX\n .text:00000000004019e3 48 83 c4 30                    ADD RSP,0x30\n .text:00000000004019e7 5b                             POP RBX\n .text:00000000004019e8 5e                             POP RSI\n .text:00000000004019e9 5f                             POP RDI\n .text:00000000004019ea 5d                             POP RBP\n .text:00000000004019eb 41 5c                          POP R12\n .text:00000000004019ed c3                             RET\n .text:00000000004019f0 48 8d 4c 24 20                 LEA RCX,[RSP + 0x20]\n .text:00000000004019f5 ff 15 31 78 00 00              CALL qword ptr [0x0040922c]\n .text:00000000004019fb 48 8b 74 24 20                 MOV RSI,qword ptr [RSP + 0x20]\n .text:0000000000401a00 ff 15 06 78 00 00              CALL qword ptr [0x0040920c]\n .text:0000000000401a06 89 c5                          MOV EBP,EAX\n .text:0000000000401a08 ff 15 06 78 00 00              CALL qword ptr [0x00409214]\n .text:0000000000401a0e 89 c7                          MOV EDI,EAX\n .text:0000000000401a10 ff 15 1e 78 00 00              CALL qword ptr [0x00409234]\n .text:0000000000401a16 48 8d 4c 24 28                 LEA RCX,[RSP + 0x28]\n .text:0000000000401a1b 41 89 c4                       MOV R12D,EAX\n .text:0000000000401a1e ff 15 28 78 00 00              CALL qword ptr [0x0040924c]\n .text:0000000000401a24 48 33 74 24 28                 XOR RSI,qword ptr [RSP + 0x28]\n .text:0000000000401a29 89 e8                          MOV EAX,EBP\n .text:0000000000401a2b 48 ba ff ff ff ff ff ff 00 00  MOV RDX,0xffffffffffff\n .text:0000000000401a35 48 31 f0                       XOR RAX,RSI\n .text:0000000000401a38 89 fe                          MOV ESI,EDI\n .text:0000000000401a3a 48 31 c6                       XOR RSI,RAX\n .text:0000000000401a3d 44 89 e0                       MOV EAX,R12D\n .text:0000000000401a40 48 31 f0                       XOR RAX,RSI\n .text:0000000000401a43 48 21 d0                       AND RAX,RDX\n .text:0000000000401a46 48 39 d8                       CMP RAX,RBX\n .text:0000000000401a49 74 25                          JZ 0x00401a70\n .text:0000000000401a4b 48 89 c2                       MOV RDX,RAX\n .text:0000000000401a4e 48 f7 d2                       NOT RDX\n .text:0000000000401a51 48 89 05 78 29 00 00           MOV qword ptr [0x004043d0],RAX\n .text:0000000000401a58 48 89 15 81 29 00 00           MOV qword ptr [0x004043e0],RDX\n .text:0000000000401a5f 48 83 c4 30                    ADD RSP,0x30\n .text:0000000000401a63 5b                             POP RBX\n .text:0000000000401a64 5e                             POP RSI\n .text:0000000000401a65 5f                             POP RDI\n .text:0000000000401a66 5d                             POP RBP\n .text:0000000000401a67 41 5c                          POP R12\n .text:0000000000401a69 c3                             RET\n .text:0000000000401a70 48 ba cc 5d 20 d2 66 d4 ff ff  MOV RDX,-0x2b992ddfa234\n .text:0000000000401a7a 48 b8 33 a2 df 2d 99 2b 00 00  MOV RAX,0x2b992ddfa233\n .text:0000000000401a84 eb cb                          JMP 0x00401a51\n\n__fastcall tls_callback_1(undefined8 param_1, uint param_2)\n .text:0000000000401b90 48 83 ec 28                    SUB RSP,0x28\n .text:0000000000401b94 83 fa 03                       CMP EDX,0x3\n .text:0000000000401b97 74 17                          JZ 0x00401bb0\n .text:0000000000401b99 85 d2                          TEST EDX,EDX\n .text:0000000000401b9b 74 13                          JZ 0x00401bb0\n .text:0000000000401b9d b8 01 00 00 00                 MOV EAX,0x1\n .text:0000000000401ba2 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000401ba6 c3                             RET\n .text:0000000000401bb0 e8 7b 0d 00 00                 CALL 0x00402930\n .text:0000000000401bb5 b8 01 00 00 00                 MOV EAX,0x1\n .text:0000000000401bba 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000401bbe c3                             RET\n\n__fastcall tls_callback_0(undefined8 param_1, int param_2)\n .text:0000000000401bc0 56                             PUSH RSI\n .text:0000000000401bc1 53                             PUSH RBX\n .text:0000000000401bc2 48 83 ec 28                    SUB RSP,0x28\n .text:0000000000401bc6 48 8b 05 03 38 00 00           MOV RAX,qword ptr [0x004053d0]\n .text:0000000000401bcd 83 38 02                       CMP dword ptr [RAX],0x2\n .text:0000000000401bd0 74 06                          JZ 0x00401bd8\n .text:0000000000401bd2 c7 00 02 00 00 00              MOV dword ptr [RAX],0x2\n .text:0000000000401bd8 83 fa 02                       CMP EDX,0x2\n .text:0000000000401bdb 74 13                          JZ 0x00401bf0\n .text:0000000000401bdd 83 fa 01                       CMP EDX,0x1\n .text:0000000000401be0 74 4e                          JZ 0x00401c30\n .text:0000000000401be2 b8 01 00 00 00                 MOV EAX,0x1\n .text:0000000000401be7 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000401beb 5b                             POP RBX\n .text:0000000000401bec 5e                             POP RSI\n .text:0000000000401bed c3                             RET\n .text:0000000000401bf0 48 8d 1d 69 84 00 00           LEA RBX,[0x40a060]\n .text:0000000000401bf7 48 8d 35 62 84 00 00           LEA RSI,[0x40a060]\n .text:0000000000401bfe 48 39 de                       CMP RSI,RBX\n .text:0000000000401c01 74 df                          JZ 0x00401be2\n .text:0000000000401c03 0f 1f 44 00 00                 NOP dword ptr [RAX + RAX*0x1]\n .text:0000000000401c08 48 8b 03                       MOV RAX,qword ptr [RBX]\n .text:0000000000401c0b 48 85 c0                       TEST RAX,RAX\n .text:0000000000401c0e 74 02                          JZ 0x00401c12\n .text:0000000000401c10 ff d0                          CALL RAX\n .text:0000000000401c12 48 83 c3 08                    ADD RBX,0x8\n .text:0000000000401c16 48 39 de                       CMP RSI,RBX\n .text:0000000000401c19 75 ed                          JNZ 0x00401c08\n .text:0000000000401c1b b8 01 00 00 00                 MOV EAX,0x1\n .text:0000000000401c20 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000401c24 5b                             POP RBX\n .text:0000000000401c25 5e                             POP RSI\n .text:0000000000401c26 c3                             RET\n .text:0000000000401c30 e8 fb 0c 00 00                 CALL 0x00402930\n .text:0000000000401c35 b8 01 00 00 00                 MOV EAX,0x1\n .text:0000000000401c3a 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000401c3e 5b                             POP RBX\n .text:0000000000401c3f 5e                             POP RSI\n .text:0000000000401c40 c3                             RET\n\n__fastcall FUN_00401d60()\n .text:0000000000401d60 db e3                          FNINIT\n .text:0000000000401d62 c3                             RET\n\n__fastcall FUN_00401d70(undefined8 param_1, undefined8 param_2, undefined8 param_3, undefined8 param_4, char * * param_5, undefined8 param_6, undefined8 param_7, undefined8 param_8)\n .text:0000000000401d70 41 54                          PUSH R12\n .text:0000000000401d72 53                             PUSH RBX\n .text:0000000000401d73 48 83 ec 38                    SUB RSP,0x38\n .text:0000000000401d77 49 89 cc                       MOV R12,RCX\n .text:0000000000401d7a 48 8d 44 24 58                 LEA RAX,[RSP + 0x58]\n .text:0000000000401d7f b9 02 00 00 00                 MOV ECX,0x2\n .text:0000000000401d84 48 89 54 24 58                 MOV qword ptr [RSP + 0x58],RDX\n .text:0000000000401d89 4c 89 44 24 60                 MOV qword ptr [RSP + 0x60],R8\n .text:0000000000401d8e 4c 89 4c 24 68                 MOV qword ptr [RSP + 0x68],R9\n .text:0000000000401d93 48 89 44 24 28                 MOV qword ptr [RSP + 0x28],RAX\n .text:0000000000401d98 e8 63 11 00 00                 CALL 0x00402f00\n .text:0000000000401d9d 41 b8 1b 00 00 00              MOV R8D,0x1b\n .text:0000000000401da3 ba 01 00 00 00                 MOV EDX,0x1\n .text:0000000000401da8 48 8d 0d b1 34 00 00           LEA RCX,[0x405260]\n .text:0000000000401daf 49 89 c1                       MOV R9,RAX\n .text:0000000000401db2 e8 c9 10 00 00                 CALL 0x00402e80\n .text:0000000000401db7 48 8b 5c 24 28                 MOV RBX,qword ptr [RSP + 0x28]\n .text:0000000000401dbc b9 02 00 00 00                 MOV ECX,0x2\n .text:0000000000401dc1 e8 3a 11 00 00                 CALL 0x00402f00\n .text:0000000000401dc6 4c 89 e2                       MOV RDX,R12\n .text:0000000000401dc9 48 89 c1                       MOV RCX,RAX\n .text:0000000000401dcc 49 89 d8                       MOV R8,RBX\n .text:0000000000401dcf e8 5c 10 00 00                 CALL 0x00402e30\n .text:0000000000401dd4 e8 d7 10 00 00                 CALL 0x00402eb0\n .text:0000000000401dd9 90                             NOP\n .text:0000000000401dda 66 0f 1f 44 00 00              NOP word ptr [RAX + RAX*0x1]\n\n__fastcall FUN_00401de0(undefined8 param_1, undefined8 param_2, undefined8 param_3, undefined8 param_4, undefined8 * param_5, undefined8 * param_6, ulonglong param_7, PDWORD param_8)\n .text:0000000000401de0 41 54                          PUSH R12\n .text:0000000000401de2 55                             PUSH RBP\n .text:0000000000401de3 57                             PUSH RDI\n .text:0000000000401de4 56                             PUSH RSI\n .text:0000000000401de5 53                             PUSH RBX\n .text:0000000000401de6 48 83 ec 50                    SUB RSP,0x50\n .text:0000000000401dea 48 63 3d 23 68 00 00           MOVSXD RDI,dword ptr [0x00408614]\n .text:0000000000401df1 49 89 cc                       MOV R12,RCX\n .text:0000000000401df4 48 89 d6                       MOV RSI,RDX\n .text:0000000000401df7 4c 89 c3                       MOV RBX,R8\n .text:0000000000401dfa 85 ff                          TEST EDI,EDI\n .text:0000000000401dfc 0f 8e 86 01 00 00              JLE 0x00401f88\n .text:0000000000401e02 48 8b 05 0f 68 00 00           MOV RAX,qword ptr [0x00408618]\n .text:0000000000401e09 31 c9                          XOR ECX,ECX\n .text:0000000000401e0b 48 83 c0 18                    ADD RAX,0x18\n .text:0000000000401e0f 90                             NOP\n .text:0000000000401e10 48 8b 10                       MOV RDX,qword ptr [RAX]\n .text:0000000000401e13 49 39 d4                       CMP R12,RDX\n .text:0000000000401e16 72 14                          JC 0x00401e2c\n .text:0000000000401e18 4c 8b 40 08                    MOV R8,qword ptr [RAX + 0x8]\n .text:0000000000401e1c 45 8b 40 08                    MOV R8D,dword ptr [R8 + 0x8]\n .text:0000000000401e20 4c 01 c2                       ADD RDX,R8\n .text:0000000000401e23 49 39 d4                       CMP R12,RDX\n .text:0000000000401e26 0f 82 8b 00 00 00              JC 0x00401eb7\n .text:0000000000401e2c 83 c1 01                       ADD ECX,0x1\n .text:0000000000401e2f 48 83 c0 28                    ADD RAX,0x28\n .text:0000000000401e33 39 f9                          CMP ECX,EDI\n .text:0000000000401e35 75 d9                          JNZ 0x00401e10\n .text:0000000000401e37 4c 89 e1                       MOV RCX,R12\n .text:0000000000401e3a e8 01 0d 00 00                 CALL 0x00402b40\n .text:0000000000401e3f 48 89 c5                       MOV RBP,RAX\n .text:0000000000401e42 48 85 c0                       TEST RAX,RAX\n .text:0000000000401e45 0f 84 77 01 00 00              JZ 0x00401fc2\n .text:0000000000401e4b 48 8b 05 c6 67 00 00           MOV RAX,qword ptr [0x00408618]\n .text:0000000000401e52 48 8d 3c bf                    LEA RDI,[RDI + RDI*0x4]\n .text:0000000000401e56 48 c1 e7 03                    SHL RDI,0x3\n .text:0000000000401e5a 48 01 f8                       ADD RAX,RDI\n .text:0000000000401e5d 48 89 68 20                    MOV qword ptr [RAX + 0x20],RBP\n .text:0000000000401e61 c7 00 00 00 00 00              MOV dword ptr [RAX],0x0\n .text:0000000000401e67 e8 04 0e 00 00                 CALL 0x00402c70\n .text:0000000000401e6c 8b 4d 0c                       MOV ECX,dword ptr [RBP + 0xc]\n .text:0000000000401e6f 48 8d 54 24 20                 LEA RDX,[RSP + 0x20]\n .text:0000000000401e74 41 b8 30 00 00 00              MOV R8D,0x30\n .text:0000000000401e7a 48 01 c1                       ADD RCX,RAX\n .text:0000000000401e7d 48 8b 05 94 67 00 00           MOV RAX,qword ptr [0x00408618]\n .text:0000000000401e84 48 89 4c 38 18                 MOV qword ptr [RAX + RDI*0x1 + 0x18],RCX\n .text:0000000000401e89 ff 15 15 74 00 00              CALL qword ptr [0x004092a4]\n .text:0000000000401e8f 48 85 c0                       TEST RAX,RAX\n .text:0000000000401e92 0f 84 39 01 00 00              JZ 0x00401fd1\n .text:0000000000401e98 8b 44 24 44                    MOV EAX,dword ptr [RSP + 0x44]\n .text:0000000000401e9c 8d 50 c0                       LEA EDX,[RAX + -0x40]\n .text:0000000000401e9f 83 e2 bf                       AND EDX,0xffffffbf\n .text:0000000000401ea2 74 0c                          JZ 0x00401eb0\n .text:0000000000401ea4 83 e8 04                       SUB EAX,0x4\n .text:0000000000401ea7 83 e0 fb                       AND EAX,0xfffffffb\n .text:0000000000401eaa 0f 85 90 00 00 00              JNZ 0x00401f40\n .text:0000000000401eb0 83 05 5d 67 00 00 01           ADD dword ptr [0x00408614],0x1\n .text:0000000000401eb7 83 fb 08                       CMP EBX,0x8\n .text:0000000000401eba 73 2c                          JNC 0x00401ee8\n .text:0000000000401ebc f6 c3 04                       TEST BL,0x4\n .text:0000000000401ebf 0f 85 cb 00 00 00              JNZ 0x00401f90\n .text:0000000000401ec5 85 db                          TEST EBX,EBX\n .text:0000000000401ec7 74 10                          JZ 0x00401ed9\n .text:0000000000401ec9 0f b6 06                       MOVZX EAX,byte ptr [RSI]\n .text:0000000000401ecc 41 88 04 24                    MOV byte ptr [R12],AL\n .text:0000000000401ed0 f6 c3 02                       TEST BL,0x2\n .text:0000000000401ed3 0f 85 d7 00 00 00              JNZ 0x00401fb0\n .text:0000000000401ed9 48 83 c4 50                    ADD RSP,0x50\n .text:0000000000401edd 5b                             POP RBX\n .text:0000000000401ede 5e                             POP RSI\n .text:0000000000401edf 5f                             POP RDI\n .text:0000000000401ee0 5d                             POP RBP\n .text:0000000000401ee1 41 5c                          POP R12\n .text:0000000000401ee3 c3                             RET\n .text:0000000000401ee8 48 8b 06                       MOV RAX,qword ptr [RSI]\n .text:0000000000401eeb 49 8d 4c 24 08                 LEA RCX,[R12 + 0x8]\n .text:0000000000401ef0 48 83 e1 f8                    AND RCX,-0x8\n .text:0000000000401ef4 49 89 04 24                    MOV qword ptr [R12],RAX\n .text:0000000000401ef8 89 d8                          MOV EAX,EBX\n .text:0000000000401efa 48 8b 54 06 f8                 MOV RDX,qword ptr [RSI + RAX*0x1 + -0x8]\n .text:0000000000401eff 49 89 54 04 f8                 MOV qword ptr [R12 + RAX*0x1 + -0x8],RDX\n .text:0000000000401f04 49 29 cc                       SUB R12,RCX\n .text:0000000000401f07 44 01 e3                       ADD EBX,R12D\n .text:0000000000401f0a 4c 29 e6                       SUB RSI,R12\n .text:0000000000401f0d 83 e3 f8                       AND EBX,0xfffffff8\n .text:0000000000401f10 83 fb 08                       CMP EBX,0x8\n .text:0000000000401f13 72 c4                          JC 0x00401ed9\n .text:0000000000401f15 83 e3 f8                       AND EBX,0xfffffff8\n .text:0000000000401f18 31 c0                          XOR EAX,EAX\n .text:0000000000401f1a 89 c2                          MOV EDX,EAX\n .text:0000000000401f1c 83 c0 08                       ADD EAX,0x8\n .text:0000000000401f1f 4c 8b 04 16                    MOV R8,qword ptr [RSI + RDX*0x1]\n .text:0000000000401f23 4c 89 04 11                    MOV qword ptr [RCX + RDX*0x1],R8\n .text:0000000000401f27 39 d8                          CMP EAX,EBX\n .text:0000000000401f29 72 ef                          JC 0x00401f1a\n .text:0000000000401f2b 48 83 c4 50                    ADD RSP,0x50\n .text:0000000000401f2f 5b                             POP RBX\n .text:0000000000401f30 5e                             POP RSI\n .text:0000000000401f31 5f                             POP RDI\n .text:0000000000401f32 5d                             POP RBP\n .text:0000000000401f33 41 5c                          POP R12\n .text:0000000000401f35 c3                             RET\n .text:0000000000401f40 48 8b 4c 24 20                 MOV RCX,qword ptr [RSP + 0x20]\n .text:0000000000401f45 48 8b 54 24 38                 MOV RDX,qword ptr [RSP + 0x38]\n .text:0000000000401f4a 41 b8 40 00 00 00              MOV R8D,0x40\n .text:0000000000401f50 48 03 3d c1 66 00 00           ADD RDI,qword ptr [0x00408618]\n .text:0000000000401f57 48 89 4f 08                    MOV qword ptr [RDI + 0x8],RCX\n .text:0000000000401f5b 49 89 f9                       MOV R9,RDI\n .text:0000000000401f5e 48 89 57 10                    MOV qword ptr [RDI + 0x10],RDX\n .text:0000000000401f62 ff 15 34 73 00 00              CALL qword ptr [0x0040929c]\n .text:0000000000401f68 85 c0                          TEST EAX,EAX\n .text:0000000000401f6a 0f 85 40 ff ff ff              JNZ 0x00401eb0\n .text:0000000000401f70 ff 15 a6 72 00 00              CALL qword ptr [0x0040921c]\n .text:0000000000401f76 48 8d 0d 5b 33 00 00           LEA RCX,[0x4052d8]\n .text:0000000000401f7d 89 c2                          MOV EDX,EAX\n .text:0000000000401f7f e8 ec fd ff ff                 CALL 0x00401d70\n .text:0000000000401f84 0f 1f 40 00                    NOP dword ptr [RAX]\n .text:0000000000401f88 31 ff                          XOR EDI,EDI\n .text:0000000000401f8a e9 a8 fe ff ff                 JMP 0x00401e37\n .text:0000000000401f90 8b 06                          MOV EAX,dword ptr [RSI]\n .text:0000000000401f92 89 db                          MOV EBX,EBX\n .text:0000000000401f94 41 89 04 24                    MOV dword ptr [R12],EAX\n .text:0000000000401f98 8b 44 1e fc                    MOV EAX,dword ptr [RSI + RBX*0x1 + -0x4]\n .text:0000000000401f9c 41 89 44 1c fc                 MOV dword ptr [R12 + RBX*0x1 + -0x4],EAX\n .text:0000000000401fa1 e9 33 ff ff ff                 JMP 0x00401ed9\n .text:0000000000401fb0 89 db                          MOV EBX,EBX\n .text:0000000000401fb2 0f b7 44 1e fe                 MOVZX EAX,word ptr [RSI + RBX*0x1 + -0x2]\n .text:0000000000401fb7 66 41 89 44 1c fe              MOV word ptr [R12 + RBX*0x1 + -0x2],AX\n .text:0000000000401fbd e9 17 ff ff ff                 JMP 0x00401ed9\n .text:0000000000401fc2 4c 89 e2                       MOV RDX,R12\n .text:0000000000401fc5 48 8d 0d b4 32 00 00           LEA RCX,[0x405280]\n .text:0000000000401fcc e8 9f fd ff ff                 CALL 0x00401d70\n .text:0000000000401fd1 48 8b 05 40 66 00 00           MOV RAX,qword ptr [0x00408618]\n .text:0000000000401fd8 8b 55 08                       MOV EDX,dword ptr [RBP + 0x8]\n .text:0000000000401fdb 48 8d 0d be 32 00 00           LEA RCX,[0x4052a0]\n .text:0000000000401fe2 4c 8b 44 38 18                 MOV R8,qword ptr [RAX + RDI*0x1 + 0x18]\n .text:0000000000401fe7 e8 84 fd ff ff                 CALL 0x00401d70\n .text:0000000000401fec 90                             NOP\n .text:0000000000401fed 0f 1f 00                       NOP dword ptr [RAX]\n\n__fastcall FUN_00401ff0(undefined8 param_1, undefined8 param_2, undefined8 param_3, undefined8 param_4, undefined8 param_5, undefined8 param_6, ulonglong param_7, longlong param_8)\n .text:0000000000401ff0 55                             PUSH RBP\n .text:0000000000401ff1 41 57                          PUSH R15\n .text:0000000000401ff3 41 56                          PUSH R14\n .text:0000000000401ff5 41 55                          PUSH R13\n .text:0000000000401ff7 41 54                          PUSH R12\n .text:0000000000401ff9 57                             PUSH RDI\n .text:0000000000401ffa 56                             PUSH RSI\n .text:0000000000401ffb 53                             PUSH RBX\n .text:0000000000401ffc 48 83 ec 38                    SUB RSP,0x38\n .text:0000000000402000 48 8d ac 24 80 00 00 00        LEA RBP,[RSP + 0x80]\n .text:0000000000402008 8b 35 02 66 00 00              MOV ESI,dword ptr [0x00408610]\n .text:000000000040200e 85 f6                          TEST ESI,ESI\n .text:0000000000402010 74 16                          JZ 0x00402028\n .text:0000000000402012 48 8d 65 b8                    LEA RSP,[RBP + -0x48]\n .text:0000000000402016 5b                             POP RBX\n .text:0000000000402017 5e                             POP RSI\n .text:0000000000402018 5f                             POP RDI\n .text:0000000000402019 41 5c                          POP R12\n .text:000000000040201b 41 5d                          POP R13\n .text:000000000040201d 41 5e                          POP R14\n .text:000000000040201f 41 5f                          POP R15\n .text:0000000000402021 5d                             POP RBP\n .text:0000000000402022 c3                             RET\n .text:0000000000402028 c7 05 de 65 00 00 01 00 00 00  MOV dword ptr [0x00408610],0x1\n .text:0000000000402032 e8 99 0b 00 00                 CALL 0x00402bd0\n .text:0000000000402037 48 98                          CDQE\n .text:0000000000402039 48 8d 04 80                    LEA RAX,[RAX + RAX*0x4]\n .text:000000000040203d 48 8d 04 c5 0f 00 00 00        LEA RAX,[0xf + RAX*0x8]\n .text:0000000000402045 48 83 e0 f0                    AND RAX,-0x10\n .text:0000000000402049 e8 a2 0d 00 00                 CALL 0x00402df0\n .text:000000000040204e 4c 8b 25 ab 33 00 00           MOV R12,qword ptr [0x00405400]\n .text:0000000000402055 48 8b 1d b4 33 00 00           MOV RBX,qword ptr [0x00405410]\n .text:000000000040205c c7 05 ae 65 00 00 00 00 00 00  MOV dword ptr [0x00408614],0x0\n .text:0000000000402066 48 29 c4                       SUB RSP,RAX\n .text:0000000000402069 48 8d 44 24 20                 LEA RAX,[RSP + 0x20]\n .text:000000000040206e 48 89 05 a3 65 00 00           MOV qword ptr [0x00408618],RAX\n .text:0000000000402075 4c 89 e0                       MOV RAX,R12\n .text:0000000000402078 48 29 d8                       SUB RAX,RBX\n .text:000000000040207b 48 83 f8 07                    CMP RAX,0x7\n .text:000000000040207f 7e 91                          JLE 0x00402012\n .text:0000000000402081 8b 13                          MOV EDX,dword ptr [RBX]\n .text:0000000000402083 48 83 f8 0b                    CMP RAX,0xb\n .text:0000000000402087 0f 8f 4b 01 00 00              JG 0x004021d8\n .text:000000000040208d 85 d2                          TEST EDX,EDX\n .text:000000000040208f 0f 85 cb 01 00 00              JNZ 0x00402260\n .text:0000000000402095 8b 43 04                       MOV EAX,dword ptr [RBX + 0x4]\n .text:0000000000402098 85 c0                          TEST EAX,EAX\n .text:000000000040209a 0f 85 c0 01 00 00              JNZ 0x00402260\n .text:00000000004020a0 8b 53 08                       MOV EDX,dword ptr [RBX + 0x8]\n .text:00000000004020a3 83 fa 01                       CMP EDX,0x1\n .text:00000000004020a6 0f 85 1c 02 00 00              JNZ 0x004022c8\n .text:00000000004020ac 48 83 c3 0c                    ADD RBX,0xc\n .text:00000000004020b0 4c 8d 7d a8                    LEA R15,[RBP + -0x58]\n .text:00000000004020b4 4c 8b 2d 75 33 00 00           MOV R13,qword ptr [0x00405430]\n .text:00000000004020bb 49 be 00 00 00 00 ff ff ff ff  MOV R14,-0x100000000\n .text:00000000004020c5 4c 39 e3                       CMP RBX,R12\n .text:00000000004020c8 72 3f                          JC 0x00402109\n .text:00000000004020ca e9 43 ff ff ff                 JMP 0x00402012\n .text:00000000004020d0 44 0f b6 01                    MOVZX R8D,byte ptr [RCX]\n .text:00000000004020d4 4c 89 ff                       MOV RDI,R15\n .text:00000000004020d7 4d 89 c2                       MOV R10,R8\n .text:00000000004020da 49 81 ca 00 ff ff ff           OR R10,-0x100\n .text:00000000004020e1 45 84 c0                       TEST R8B,R8B\n .text:00000000004020e4 4d 0f 48 c2                    CMOVS R8,R10\n .text:00000000004020e8 49 29 d0                       SUB R8,RDX\n .text:00000000004020eb 4c 89 fa                       MOV RDX,R15\n .text:00000000004020ee 4d 01 c8                       ADD R8,R9\n .text:00000000004020f1 4c 89 45 a8                    MOV qword ptr [RBP + -0x58],R8\n .text:00000000004020f5 41 b8 01 00 00 00              MOV R8D,0x1\n .text:00000000004020fb e8 e0 fc ff ff                 CALL 0x00401de0\n .text:0000000000402100 48 83 c3 0c                    ADD RBX,0xc\n .text:0000000000402104 4c 39 e3                       CMP RBX,R12\n .text:0000000000402107 73 77                          JNC 0x00402180\n .text:0000000000402109 8b 13                          MOV EDX,dword ptr [RBX]\n .text:000000000040210b 8b 4b 04                       MOV ECX,dword ptr [RBX + 0x4]\n .text:000000000040210e 44 0f b6 43 08                 MOVZX R8D,byte ptr [RBX + 0x8]\n .text:0000000000402113 4c 01 ea                       ADD RDX,R13\n .text:0000000000402116 4c 01 e9                       ADD RCX,R13\n .text:0000000000402119 4c 8b 0a                       MOV R9,qword ptr [RDX]\n .text:000000000040211c 41 83 f8 20                    CMP R8D,0x20\n .text:0000000000402120 0f 84 0a 01 00 00              JZ 0x00402230\n .text:0000000000402126 0f 87 d4 00 00 00              JA 0x00402200\n .text:000000000040212c 41 83 f8 08                    CMP R8D,0x8\n .text:0000000000402130 74 9e                          JZ 0x004020d0\n .text:0000000000402132 41 83 f8 10                    CMP R8D,0x10\n .text:0000000000402136 0f 85 75 01 00 00              JNZ 0x004022b1\n .text:000000000040213c 44 0f b7 01                    MOVZX R8D,word ptr [RCX]\n .text:0000000000402140 4c 89 ff                       MOV RDI,R15\n .text:0000000000402143 4d 89 c2                       MOV R10,R8\n .text:0000000000402146 49 81 ca 00 00 ff ff           OR R10,-0x10000\n .text:000000000040214d 66 45 85 c0                    TEST R8W,R8W\n .text:0000000000402151 4d 0f 48 c2                    CMOVS R8,R10\n .text:0000000000402155 48 83 c3 0c                    ADD RBX,0xc\n .text:0000000000402159 49 29 d0                       SUB R8,RDX\n .text:000000000040215c 4c 89 fa                       MOV RDX,R15\n .text:000000000040215f 4d 01 c8                       ADD R8,R9\n .text:0000000000402162 4c 89 45 a8                    MOV qword ptr [RBP + -0x58],R8\n .text:0000000000402166 41 b8 02 00 00 00              MOV R8D,0x2\n .text:000000000040216c e8 6f fc ff ff                 CALL 0x00401de0\n .text:0000000000402171 4c 39 e3                       CMP RBX,R12\n .text:0000000000402174 72 93                          JC 0x00402109\n .text:0000000000402176 66 2e 0f 1f 84 00 00 00 00 00  NOP word ptr CS:[RAX + RAX*0x1]\n .text:0000000000402180 8b 05 8e 64 00 00              MOV EAX,dword ptr [0x00408614]\n .text:0000000000402186 85 c0                          TEST EAX,EAX\n .text:0000000000402188 0f 8e 84 fe ff ff              JLE 0x00402012\n .text:000000000040218e 4c 8b 25 07 71 00 00           MOV R12,qword ptr [0x0040929c]\n .text:0000000000402195 31 db                          XOR EBX,EBX\n .text:0000000000402197 66 0f 1f 84 00 00 00 00 00     NOP word ptr [RAX + RAX*0x1]\n .text:00000000004021a0 48 8b 05 71 64 00 00           MOV RAX,qword ptr [0x00408618]\n .text:00000000004021a7 48 01 d8                       ADD RAX,RBX\n .text:00000000004021aa 44 8b 00                       MOV R8D,dword ptr [RAX]\n .text:00000000004021ad 45 85 c0                       TEST R8D,R8D\n .text:00000000004021b0 74 0e                          JZ 0x004021c0\n .text:00000000004021b2 48 8b 50 10                    MOV RDX,qword ptr [RAX + 0x10]\n .text:00000000004021b6 48 8b 48 08                    MOV RCX,qword ptr [RAX + 0x8]\n .text:00000000004021ba 49 89 f9                       MOV R9,RDI\n .text:00000000004021bd 41 ff d4                       CALL R12\n .text:00000000004021c0 83 c6 01                       ADD ESI,0x1\n .text:00000000004021c3 48 83 c3 28                    ADD RBX,0x28\n .text:00000000004021c7 3b 35 47 64 00 00              CMP ESI,dword ptr [0x00408614]\n .text:00000000004021cd 7c d1                          JL 0x004021a0\n .text:00000000004021cf e9 3e fe ff ff                 JMP 0x00402012\n .text:00000000004021d8 85 d2                          TEST EDX,EDX\n .text:00000000004021da 0f 85 80 00 00 00              JNZ 0x00402260\n .text:00000000004021e0 8b 43 04                       MOV EAX,dword ptr [RBX + 0x4]\n .text:00000000004021e3 89 c7                          MOV EDI,EAX\n .text:00000000004021e5 0b 7b 08                       OR EDI,dword ptr [RBX + 0x8]\n .text:00000000004021e8 0f 85 aa fe ff ff              JNZ 0x00402098\n .text:00000000004021ee 8b 53 0c                       MOV EDX,dword ptr [RBX + 0xc]\n .text:00000000004021f1 48 83 c3 0c                    ADD RBX,0xc\n .text:00000000004021f5 e9 93 fe ff ff                 JMP 0x0040208d\n .text:0000000000402200 41 83 f8 40                    CMP R8D,0x40\n .text:0000000000402204 0f 85 a7 00 00 00              JNZ 0x004022b1\n .text:000000000040220a 48 8b 01                       MOV RAX,qword ptr [RCX]\n .text:000000000040220d 41 b8 08 00 00 00              MOV R8D,0x8\n .text:0000000000402213 4c 89 ff                       MOV RDI,R15\n .text:0000000000402216 48 29 d0                       SUB RAX,RDX\n .text:0000000000402219 4c 89 fa                       MOV RDX,R15\n .text:000000000040221c 4c 01 c8                       ADD RAX,R9\n .text:000000000040221f 48 89 45 a8                    MOV qword ptr [RBP + -0x58],RAX\n .text:0000000000402223 e8 b8 fb ff ff                 CALL 0x00401de0\n .text:0000000000402228 e9 d3 fe ff ff                 JMP 0x00402100\n .text:0000000000402230 8b 01                          MOV EAX,dword ptr [RCX]\n .text:0000000000402232 4c 89 ff                       MOV RDI,R15\n .text:0000000000402235 49 89 c0                       MOV R8,RAX\n .text:0000000000402238 4c 09 f0                       OR RAX,R14\n .text:000000000040223b 45 85 c0                       TEST R8D,R8D\n .text:000000000040223e 49 0f 49 c0                    CMOVNS RAX,R8\n .text:0000000000402242 41 b8 04 00 00 00              MOV R8D,0x4\n .text:0000000000402248 48 29 d0                       SUB RAX,RDX\n .text:000000000040224b 4c 89 fa                       MOV RDX,R15\n .text:000000000040224e 4c 01 c8                       ADD RAX,R9\n .text:0000000000402251 48 89 45 a8                    MOV qword ptr [RBP + -0x58],RAX\n .text:0000000000402255 e8 86 fb ff ff                 CALL 0x00401de0\n .text:000000000040225a e9 a1 fe ff ff                 JMP 0x00402100\n .text:0000000000402260 4c 39 e3                       CMP RBX,R12\n .text:0000000000402263 0f 83 a9 fd ff ff              JNC 0x00402012\n .text:0000000000402269 49 83 ec 01                    SUB R12,0x1\n .text:000000000040226d 4c 8b 2d bc 31 00 00           MOV R13,qword ptr [0x00405430]\n .text:0000000000402274 48 8d 7d a8                    LEA RDI,[RBP + -0x58]\n .text:0000000000402278 49 29 dc                       SUB R12,RBX\n .text:000000000040227b 49 c1 ec 03                    SHR R12,0x3\n .text:000000000040227f 4e 8d 64 e3 08                 LEA R12,[RBX + R12*0x8 + 0x8]\n .text:0000000000402284 0f 1f 40 00                    NOP dword ptr [RAX]\n .text:0000000000402288 8b 4b 04                       MOV ECX,dword ptr [RBX + 0x4]\n .text:000000000040228b 8b 03                          MOV EAX,dword ptr [RBX]\n .text:000000000040228d 41 b8 04 00 00 00              MOV R8D,0x4\n .text:0000000000402293 48 89 fa                       MOV RDX,RDI\n .text:0000000000402296 48 83 c3 08                    ADD RBX,0x8\n .text:000000000040229a 4c 01 e9                       ADD RCX,R13\n .text:000000000040229d 03 01                          ADD EAX,dword ptr [RCX]\n .text:000000000040229f 89 45 a8                       MOV dword ptr [RBP + -0x58],EAX\n .text:00000000004022a2 e8 39 fb ff ff                 CALL 0x00401de0\n .text:00000000004022a7 4c 39 e3                       CMP RBX,R12\n .text:00000000004022aa 75 dc                          JNZ 0x00402288\n .text:00000000004022ac e9 cf fe ff ff                 JMP 0x00402180\n .text:00000000004022b1 44 89 c2                       MOV EDX,R8D\n .text:00000000004022b4 48 8d 0d 7d 30 00 00           LEA RCX,[0x405338]\n .text:00000000004022bb 48 c7 45 a8 00 00 00 00        MOV qword ptr [RBP + -0x58],0x0\n .text:00000000004022c3 e8 a8 fa ff ff                 CALL 0x00401d70\n .text:00000000004022c8 48 8d 0d 31 30 00 00           LEA RCX,[0x405300]\n .text:00000000004022cf e8 9c fa ff ff                 CALL 0x00401d70\n .text:00000000004022d4 90                             NOP\n .text:00000000004022d5 90                             NOP\n .text:00000000004022d6 90                             NOP\n .text:00000000004022d7 90                             NOP\n .text:00000000004022d8 90                             NOP\n .text:00000000004022d9 90                             NOP\n .text:00000000004022da 90                             NOP\n .text:00000000004022db 90                             NOP\n .text:00000000004022dc 90                             NOP\n .text:00000000004022dd 90                             NOP\n .text:00000000004022de 90                             NOP\n .text:00000000004022df 90                             NOP\n .text:00000000004022e0 48 83 ec 58                    SUB RSP,0x58\n .text:00000000004022e4 48 8b 05 35 63 00 00           MOV RAX,qword ptr [0x00408620]\n .text:00000000004022eb 48 85 c0                       TEST RAX,RAX\n .text:00000000004022ee 74 2c                          JZ 0x0040231c\n .text:00000000004022f0 f2 0f 10 84 24 80 00 00 00     MOVSD XMM0,qword ptr [RSP + 0x80]\n .text:00000000004022f9 89 4c 24 20                    MOV dword ptr [RSP + 0x20],ECX\n .text:00000000004022fd 48 8d 4c 24 20                 LEA RCX,[RSP + 0x20]\n .text:0000000000402302 48 89 54 24 28                 MOV qword ptr [RSP + 0x28],RDX\n .text:0000000000402307 f2 0f 11 54 24 30              MOVSD qword ptr [RSP + 0x30],XMM2\n .text:000000000040230d f2 0f 11 5c 24 38              MOVSD qword ptr [RSP + 0x38],XMM3\n .text:0000000000402313 f2 0f 11 44 24 40              MOVSD qword ptr [RSP + 0x40],XMM0\n .text:0000000000402319 ff d0                          CALL RAX\n .text:000000000040231b 90                             NOP\n .text:000000000040231c 48 83 c4 58                    ADD RSP,0x58\n .text:0000000000402320 c3                             RET\n\n__fastcall FUN_00402330(undefined8 param_1)\n .text:0000000000402330 48 89 0d e9 62 00 00           MOV qword ptr [0x00408620],RCX\n .text:0000000000402337 e9 9c 0b 00 00                 JMP 0x00402ed8\n\n__fastcall FUN_00402340(uint * param_1)\n .text:0000000000402340 48 83 ec 28                    SUB RSP,0x28\n .text:0000000000402344 8b 01                          MOV EAX,dword ptr [RCX]\n .text:0000000000402346 3d 96 00 00 c0                 CMP EAX,0xc0000096\n .text:000000000040234b 0f 87 2f 01 00 00              JA 0x00402480\n .text:0000000000402351 3d 8b 00 00 c0                 CMP EAX,0xc000008b\n .text:0000000000402356 76 58                          JBE 0x004023b0\n .text:0000000000402358 05 73 ff ff 3f                 ADD EAX,0x3fffff73\n .text:000000000040235d 83 f8 09                       CMP EAX,0x9\n .text:0000000000402360 77 3a                          JA 0x0040239c\n .text:0000000000402362 48 8d 15 07 30 00 00           LEA RDX,[0x405370]\n .text:0000000000402369 48 63 04 82                    MOVSXD RAX,dword ptr [RDX + RAX*0x4]\n .text:000000000040236d 48 01 d0                       ADD RAX,RDX\n .text:0000000000402370 ff e0                          JMP RAX\n .text:0000000000402372 31 d2                          XOR EDX,EDX\n .text:0000000000402374 b9 08 00 00 00                 MOV ECX,0x8\n .text:0000000000402379 e8 d2 0a 00 00                 CALL 0x00402e50\n .text:000000000040237e 48 83 f8 01                    CMP RAX,0x1\n .text:0000000000402382 0f 85 a5 00 00 00              JNZ 0x0040242d\n .text:0000000000402388 ba 01 00 00 00                 MOV EDX,0x1\n .text:000000000040238d b9 08 00 00 00                 MOV ECX,0x8\n .text:0000000000402392 e8 b9 0a 00 00                 CALL 0x00402e50\n .text:0000000000402397 e8 c4 f9 ff ff                 CALL 0x00401d60\n .text:000000000040239c 45 31 c0                       XOR R8D,R8D\n .text:000000000040239f 44 89 c0                       MOV EAX,R8D\n .text:00000000004023a2 48 83 c4 28                    ADD RSP,0x28\n .text:00000000004023a6 c3                             RET\n .text:00000000004023b0 3d 05 00 00 c0                 CMP EAX,0xc0000005\n .text:00000000004023b5 0f 84 95 00 00 00              JZ 0x00402450\n .text:00000000004023bb 76 46                          JBE 0x00402403\n .text:00000000004023bd 45 31 c0                       XOR R8D,R8D\n .text:00000000004023c0 3d 08 00 00 c0                 CMP EAX,0xc0000008\n .text:00000000004023c5 74 d8                          JZ 0x0040239f\n .text:00000000004023c7 3d 1d 00 00 c0                 CMP EAX,0xc000001d\n .text:00000000004023cc 0f 85 ae 00 00 00              JNZ 0x00402480\n .text:00000000004023d2 31 d2                          XOR EDX,EDX\n .text:00000000004023d4 b9 04 00 00 00                 MOV ECX,0x4\n .text:00000000004023d9 e8 72 0a 00 00                 CALL 0x00402e50\n .text:00000000004023de 48 83 f8 01                    CMP RAX,0x1\n .text:00000000004023e2 0f 84 b8 00 00 00              JZ 0x004024a0\n .text:00000000004023e8 48 85 c0                       TEST RAX,RAX\n .text:00000000004023eb 0f 84 9f 00 00 00              JZ 0x00402490\n .text:00000000004023f1 b9 04 00 00 00                 MOV ECX,0x4\n .text:00000000004023f6 ff d0                          CALL RAX\n .text:00000000004023f8 45 31 c0                       XOR R8D,R8D\n .text:00000000004023fb 44 89 c0                       MOV EAX,R8D\n .text:00000000004023fe 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000402402 c3                             RET\n .text:0000000000402403 45 31 c0                       XOR R8D,R8D\n .text:0000000000402406 3d 02 00 00 80                 CMP EAX,0x80000002\n .text:000000000040240b 41 0f 95 c0                    SETNZ R8B\n .text:000000000040240f 44 89 c0                       MOV EAX,R8D\n .text:0000000000402412 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000402416 c3                             RET\n .text:0000000000402417 31 d2                          XOR EDX,EDX\n .text:0000000000402419 b9 08 00 00 00                 MOV ECX,0x8\n .text:000000000040241e e8 2d 0a 00 00                 CALL 0x00402e50\n .text:0000000000402423 48 83 f8 01                    CMP RAX,0x1\n .text:0000000000402427 0f 84 93 00 00 00              JZ 0x004024c0\n .text:000000000040242d 41 b8 01 00 00 00              MOV R8D,0x1\n .text:0000000000402433 48 85 c0                       TEST RAX,RAX\n .text:0000000000402436 0f 84 63 ff ff ff              JZ 0x0040239f\n .text:000000000040243c b9 08 00 00 00                 MOV ECX,0x8\n .text:0000000000402441 ff d0                          CALL RAX\n .text:0000000000402443 45 31 c0                       XOR R8D,R8D\n .text:0000000000402446 e9 54 ff ff ff                 JMP 0x0040239f\n .text:0000000000402450 31 d2                          XOR EDX,EDX\n .text:0000000000402452 b9 0b 00 00 00                 MOV ECX,0xb\n .text:0000000000402457 e8 f4 09 00 00                 CALL 0x00402e50\n .text:000000000040245c 48 83 f8 01                    CMP RAX,0x1\n .text:0000000000402460 74 7e                          JZ 0x004024e0\n .text:0000000000402462 48 85 c0                       TEST RAX,RAX\n .text:0000000000402465 74 29                          JZ 0x00402490\n .text:0000000000402467 b9 0b 00 00 00                 MOV ECX,0xb\n .text:000000000040246c ff d0                          CALL RAX\n .text:000000000040246e 45 31 c0                       XOR R8D,R8D\n .text:0000000000402471 e9 29 ff ff ff                 JMP 0x0040239f\n .text:0000000000402480 41 b8 01 00 00 00              MOV R8D,0x1\n .text:0000000000402486 e9 14 ff ff ff                 JMP 0x0040239f\n .text:0000000000402490 41 b8 04 00 00 00              MOV R8D,0x4\n .text:0000000000402496 e9 04 ff ff ff                 JMP 0x0040239f\n .text:00000000004024a0 ba 01 00 00 00                 MOV EDX,0x1\n .text:00000000004024a5 b9 04 00 00 00                 MOV ECX,0x4\n .text:00000000004024aa e8 a1 09 00 00                 CALL 0x00402e50\n .text:00000000004024af 45 31 c0                       XOR R8D,R8D\n .text:00000000004024b2 e9 e8 fe ff ff                 JMP 0x0040239f\n .text:00000000004024c0 ba 01 00 00 00                 MOV EDX,0x1\n .text:00000000004024c5 b9 08 00 00 00                 MOV ECX,0x8\n .text:00000000004024ca e8 81 09 00 00                 CALL 0x00402e50\n .text:00000000004024cf 45 31 c0                       XOR R8D,R8D\n .text:00000000004024d2 e9 c8 fe ff ff                 JMP 0x0040239f\n .text:00000000004024e0 ba 01 00 00 00                 MOV EDX,0x1\n .text:00000000004024e5 b9 0b 00 00 00                 MOV ECX,0xb\n .text:00000000004024ea e8 61 09 00 00                 CALL 0x00402e50\n .text:00000000004024ef 45 31 c0                       XOR R8D,R8D\n .text:00000000004024f2 e9 a8 fe ff ff                 JMP 0x0040239f\n\n__fastcall FUN_00402500()\n .text:0000000000402500 41 54                          PUSH R12\n .text:0000000000402502 55                             PUSH RBP\n .text:0000000000402503 57                             PUSH RDI\n .text:0000000000402504 56                             PUSH RSI\n .text:0000000000402505 53                             PUSH RBX\n .text:0000000000402506 48 83 ec 20                    SUB RSP,0x20\n .text:000000000040250a e8 61 07 00 00                 CALL 0x00402c70\n .text:000000000040250f 48 89 c6                       MOV RSI,RAX\n .text:0000000000402512 8b 05 30 61 00 00              MOV EAX,dword ptr [0x00408648]\n .text:0000000000402518 85 c0                          TEST EAX,EAX\n .text:000000000040251a 75 25                          JNZ 0x00402541\n .text:000000000040251c 48 85 f6                       TEST RSI,RSI\n .text:000000000040251f 74 20                          JZ 0x00402541\n .text:0000000000402521 48 8d 0d 70 2e 00 00           LEA RCX,[0x405398]\n .text:0000000000402528 c7 05 16 61 00 00 01 00 00 00  MOV dword ptr [0x00408648],0x1\n .text:0000000000402532 e8 69 05 00 00                 CALL 0x00402aa0\n .text:0000000000402537 48 85 c0                       TEST RAX,RAX\n .text:000000000040253a 74 14                          JZ 0x00402550\n .text:000000000040253c b8 01 00 00 00                 MOV EAX,0x1\n .text:0000000000402541 48 83 c4 20                    ADD RSP,0x20\n .text:0000000000402545 5b                             POP RBX\n .text:0000000000402546 5e                             POP RSI\n .text:0000000000402547 5f                             POP RDI\n .text:0000000000402548 5d                             POP RBP\n .text:0000000000402549 41 5c                          POP R12\n .text:000000000040254b c3                             RET\n .text:0000000000402550 48 8d 1d 09 62 00 00           LEA RBX,[0x408760]\n .text:0000000000402557 b9 30 00 00 00                 MOV ECX,0x30\n .text:000000000040255c 45 31 e4                       XOR R12D,R12D\n .text:000000000040255f 48 8d 15 fa 60 00 00           LEA RDX,[0x408660]\n .text:0000000000402566 48 89 df                       MOV RDI,RBX\n .text:0000000000402569 48 8d 2d d0 fd ff ff           LEA RBP,[0x402340]\n .text:0000000000402570 f3 48 ab                       STOSQ.REP RDI\n .text:0000000000402573 b9 20 00 00 00                 MOV ECX,0x20\n .text:0000000000402578 48 89 d7                       MOV RDI,RDX\n .text:000000000040257b 48 29 f5                       SUB RBP,RSI\n .text:000000000040257e f3 48 ab                       STOSQ.REP RDI\n .text:0000000000402581 48 89 d7                       MOV RDI,RDX\n .text:0000000000402584 eb 37                          JMP 0x004025bd\n .text:0000000000402590 c6 07 09                       MOV byte ptr [RDI],0x9\n .text:0000000000402593 49 83 c4 01                    ADD R12,0x1\n .text:0000000000402597 48 83 c3 0c                    ADD RBX,0xc\n .text:000000000040259b 89 6f 04                       MOV dword ptr [RDI + 0x4],EBP\n .text:000000000040259e 8b 50 0c                       MOV EDX,dword ptr [RAX + 0xc]\n .text:00000000004025a1 89 53 f4                       MOV dword ptr [RBX + -0xc],EDX\n .text:00000000004025a4 03 50 08                       ADD EDX,dword ptr [RAX + 0x8]\n .text:00000000004025a7 48 89 f8                       MOV RAX,RDI\n .text:00000000004025aa 48 83 c7 08                    ADD RDI,0x8\n .text:00000000004025ae 48 29 f0                       SUB RAX,RSI\n .text:00000000004025b1 89 53 f8                       MOV dword ptr [RBX + -0x8],EDX\n .text:00000000004025b4 89 43 fc                       MOV dword ptr [RBX + -0x4],EAX\n .text:00000000004025b7 49 83 fc 20                    CMP R12,0x20\n .text:00000000004025bb 74 23                          JZ 0x004025e0\n .text:00000000004025bd 4c 89 e1                       MOV RCX,R12\n .text:00000000004025c0 e8 3b 06 00 00                 CALL 0x00402c00\n .text:00000000004025c5 48 85 c0                       TEST RAX,RAX\n .text:00000000004025c8 75 c6                          JNZ 0x00402590\n .text:00000000004025ca 4d 85 e4                       TEST R12,R12\n .text:00000000004025cd 0f 84 69 ff ff ff              JZ 0x0040253c\n .text:00000000004025d3 44 89 e2                       MOV EDX,R12D\n .text:00000000004025d6 eb 0d                          JMP 0x004025e5\n .text:00000000004025e0 ba 20 00 00 00                 MOV EDX,0x20\n .text:00000000004025e5 49 89 f0                       MOV R8,RSI\n .text:00000000004025e8 48 8d 0d 71 61 00 00           LEA RCX,[0x408760]\n .text:00000000004025ef ff 15 5f 6c 00 00              CALL qword ptr [0x00409254]\n .text:00000000004025f5 e9 42 ff ff ff                 JMP 0x0040253c\n\n__fastcall FUN_004027b0()\n .text:00000000004027b0 41 54                          PUSH R12\n .text:00000000004027b2 57                             PUSH RDI\n .text:00000000004027b3 56                             PUSH RSI\n .text:00000000004027b4 53                             PUSH RBX\n .text:00000000004027b5 48 83 ec 28                    SUB RSP,0x28\n .text:00000000004027b9 48 8d 0d 40 61 00 00           LEA RCX,[0x408900]\n .text:00000000004027c0 ff 15 36 6a 00 00              CALL qword ptr [0x004091fc]\n .text:00000000004027c6 48 8b 1d 13 61 00 00           MOV RBX,qword ptr [0x004088e0]\n .text:00000000004027cd 48 85 db                       TEST RBX,RBX\n .text:00000000004027d0 74 32                          JZ 0x00402804\n .text:00000000004027d2 48 8b 3d b3 6a 00 00           MOV RDI,qword ptr [0x0040928c]\n .text:00000000004027d9 48 8b 35 3c 6a 00 00           MOV RSI,qword ptr [0x0040921c]\n .text:00000000004027e0 8b 0b                          MOV ECX,dword ptr [RBX]\n .text:00000000004027e2 ff d7                          CALL RDI\n .text:00000000004027e4 49 89 c4                       MOV R12,RAX\n .text:00000000004027e7 ff d6                          CALL RSI\n .text:00000000004027e9 85 c0                          TEST EAX,EAX\n .text:00000000004027eb 75 0e                          JNZ 0x004027fb\n .text:00000000004027ed 4d 85 e4                       TEST R12,R12\n .text:00000000004027f0 74 09                          JZ 0x004027fb\n .text:00000000004027f2 48 8b 43 08                    MOV RAX,qword ptr [RBX + 0x8]\n .text:00000000004027f6 4c 89 e1                       MOV RCX,R12\n .text:00000000004027f9 ff d0                          CALL RAX\n .text:00000000004027fb 48 8b 5b 10                    MOV RBX,qword ptr [RBX + 0x10]\n .text:00000000004027ff 48 85 db                       TEST RBX,RBX\n .text:0000000000402802 75 dc                          JNZ 0x004027e0\n .text:0000000000402804 48 8d 0d f5 60 00 00           LEA RCX,[0x408900]\n .text:000000000040280b 48 83 c4 28                    ADD RSP,0x28\n .text:000000000040280f 5b                             POP RBX\n .text:0000000000402810 5e                             POP RSI\n .text:0000000000402811 5f                             POP RDI\n .text:0000000000402812 41 5c                          POP R12\n .text:0000000000402814 48 ff 25 29 6a 00 00           JMP qword ptr [0x00409244]\n\n__fastcall FUN_00402930(undefined8 param_1, uint param_2)\n .text:0000000000402930 53                             PUSH RBX\n .text:0000000000402931 48 83 ec 20                    SUB RSP,0x20\n .text:0000000000402935 83 fa 02                       CMP EDX,0x2\n .text:0000000000402938 0f 84 c2 00 00 00              JZ 0x00402a00\n .text:000000000040293e 77 28                          JA 0x00402968\n .text:0000000000402940 85 d2                          TEST EDX,EDX\n .text:0000000000402942 74 4c                          JZ 0x00402990\n .text:0000000000402944 8b 05 9e 5f 00 00              MOV EAX,dword ptr [0x004088e8]\n .text:000000000040294a 85 c0                          TEST EAX,EAX\n .text:000000000040294c 74 32                          JZ 0x00402980\n .text:000000000040294e c7 05 90 5f 00 00 01 00 00 00  MOV dword ptr [0x004088e8],0x1\n .text:0000000000402958 b8 01 00 00 00                 MOV EAX,0x1\n .text:000000000040295d 48 83 c4 20                    ADD RSP,0x20\n .text:0000000000402961 5b                             POP RBX\n .text:0000000000402962 c3                             RET\n .text:0000000000402968 83 fa 03                       CMP EDX,0x3\n .text:000000000040296b 75 eb                          JNZ 0x00402958\n .text:000000000040296d 8b 05 75 5f 00 00              MOV EAX,dword ptr [0x004088e8]\n .text:0000000000402973 85 c0                          TEST EAX,EAX\n .text:0000000000402975 74 e1                          JZ 0x00402958\n .text:0000000000402977 e8 34 fe ff ff                 CALL 0x004027b0\n .text:000000000040297c eb da                          JMP 0x00402958\n .text:0000000000402980 48 8d 0d 79 5f 00 00           LEA RCX,[0x408900]\n .text:0000000000402987 ff 15 af 68 00 00              CALL qword ptr [0x0040923c]\n .text:000000000040298d eb bf                          JMP 0x0040294e\n .text:0000000000402990 8b 05 52 5f 00 00              MOV EAX,dword ptr [0x004088e8]\n .text:0000000000402996 85 c0                          TEST EAX,EAX\n .text:0000000000402998 74 05                          JZ 0x0040299f\n .text:000000000040299a e8 11 fe ff ff                 CALL 0x004027b0\n .text:000000000040299f 8b 05 43 5f 00 00              MOV EAX,dword ptr [0x004088e8]\n .text:00000000004029a5 83 f8 01                       CMP EAX,0x1\n .text:00000000004029a8 75 ae                          JNZ 0x00402958\n .text:00000000004029aa 48 8b 1d 2f 5f 00 00           MOV RBX,qword ptr [0x004088e0]\n .text:00000000004029b1 48 85 db                       TEST RBX,RBX\n .text:00000000004029b4 74 1b                          JZ 0x004029d1\n .text:00000000004029b6 66 2e 0f 1f 84 00 00 00 00 00  NOP word ptr CS:[RAX + RAX*0x1]\n .text:00000000004029c0 48 89 d9                       MOV RCX,RBX\n .text:00000000004029c3 48 8b 5b 10                    MOV RBX,qword ptr [RBX + 0x10]\n .text:00000000004029c7 e8 bc 04 00 00                 CALL 0x00402e88\n .text:00000000004029cc 48 85 db                       TEST RBX,RBX\n .text:00000000004029cf 75 ef                          JNZ 0x004029c0\n .text:00000000004029d1 48 8d 0d 28 5f 00 00           LEA RCX,[0x408900]\n .text:00000000004029d8 48 c7 05 fd 5e 00 00 00 00 00 00 MOV qword ptr [0x004088e0],0x0\n .text:00000000004029e3 c7 05 fb 5e 00 00 00 00 00 00  MOV dword ptr [0x004088e8],0x0\n .text:00000000004029ed ff 15 01 68 00 00              CALL qword ptr [0x004091f4]\n .text:00000000004029f3 e9 60 ff ff ff                 JMP 0x00402958\n .text:0000000000402a00 e8 5b f3 ff ff                 CALL 0x00401d60\n .text:0000000000402a05 b8 01 00 00 00                 MOV EAX,0x1\n .text:0000000000402a0a 48 83 c4 20                    ADD RSP,0x20\n .text:0000000000402a0e 5b                             POP RBX\n .text:0000000000402a0f c3                             RET\n\n__fastcall FUN_00402a10(longlong param_1)\n .text:0000000000402a10 48 63 41 3c                    MOVSXD RAX,dword ptr [RCX + 0x3c]\n .text:0000000000402a14 48 8d 14 08                    LEA RDX,[RAX + RCX*0x1]\n .text:0000000000402a18 31 c0                          XOR EAX,EAX\n .text:0000000000402a1a 81 3a 50 45 00 00              CMP dword ptr [RDX],0x4550\n .text:0000000000402a20 75 0b                          JNZ 0x00402a2d\n .text:0000000000402a22 31 c0                          XOR EAX,EAX\n .text:0000000000402a24 66 81 7a 18 0b 02              CMP word ptr [RDX + 0x18],0x20b\n .text:0000000000402a2a 0f 94 c0                       SETZ AL\n .text:0000000000402a2d c3                             RET\n\n__fastcall FUN_00402aa0(char * param_1)\n .text:0000000000402aa0 41 54                          PUSH R12\n .text:0000000000402aa2 56                             PUSH RSI\n .text:0000000000402aa3 53                             PUSH RBX\n .text:0000000000402aa4 48 83 ec 20                    SUB RSP,0x20\n .text:0000000000402aa8 48 89 cb                       MOV RBX,RCX\n .text:0000000000402aab e8 90 03 00 00                 CALL 0x00402e40\n .text:0000000000402ab0 48 83 f8 08                    CMP RAX,0x8\n .text:0000000000402ab4 77 7a                          JA 0x00402b30\n .text:0000000000402ab6 48 8b 0d 73 29 00 00           MOV RCX,qword ptr [0x00405430]\n .text:0000000000402abd 45 31 e4                       XOR R12D,R12D\n .text:0000000000402ac0 66 81 39 4d 5a                 CMP word ptr [RCX],0x5a4d\n .text:0000000000402ac5 75 57                          JNZ 0x00402b1e\n .text:0000000000402ac7 e8 44 ff ff ff                 CALL 0x00402a10\n .text:0000000000402acc 85 c0                          TEST EAX,EAX\n .text:0000000000402ace 74 4e                          JZ 0x00402b1e\n .text:0000000000402ad0 48 63 41 3c                    MOVSXD RAX,dword ptr [RCX + 0x3c]\n .text:0000000000402ad4 48 01 c1                       ADD RCX,RAX\n .text:0000000000402ad7 0f b7 41 14                    MOVZX EAX,word ptr [RCX + 0x14]\n .text:0000000000402adb 4c 8d 64 01 18                 LEA R12,[RCX + RAX*0x1 + 0x18]\n .text:0000000000402ae0 0f b7 41 06                    MOVZX EAX,word ptr [RCX + 0x6]\n .text:0000000000402ae4 85 c0                          TEST EAX,EAX\n .text:0000000000402ae6 74 48                          JZ 0x00402b30\n .text:0000000000402ae8 83 e8 01                       SUB EAX,0x1\n .text:0000000000402aeb 48 8d 04 80                    LEA RAX,[RAX + RAX*0x4]\n .text:0000000000402aef 49 8d 74 c4 28                 LEA RSI,[R12 + RAX*0x8 + 0x28]\n .text:0000000000402af4 eb 13                          JMP 0x00402b09\n .text:0000000000402b00 49 83 c4 28                    ADD R12,0x28\n .text:0000000000402b04 49 39 f4                       CMP R12,RSI\n .text:0000000000402b07 74 27                          JZ 0x00402b30\n .text:0000000000402b09 41 b8 08 00 00 00              MOV R8D,0x8\n .text:0000000000402b0f 48 89 da                       MOV RDX,RBX\n .text:0000000000402b12 4c 89 e1                       MOV RCX,R12\n .text:0000000000402b15 e8 1e 03 00 00                 CALL 0x00402e38\n .text:0000000000402b1a 85 c0                          TEST EAX,EAX\n .text:0000000000402b1c 75 e2                          JNZ 0x00402b00\n .text:0000000000402b1e 4c 89 e0                       MOV RAX,R12\n .text:0000000000402b21 48 83 c4 20                    ADD RSP,0x20\n .text:0000000000402b25 5b                             POP RBX\n .text:0000000000402b26 5e                             POP RSI\n .text:0000000000402b27 41 5c                          POP R12\n .text:0000000000402b29 c3                             RET\n .text:0000000000402b30 45 31 e4                       XOR R12D,R12D\n .text:0000000000402b33 4c 89 e0                       MOV RAX,R12\n .text:0000000000402b36 48 83 c4 20                    ADD RSP,0x20\n .text:0000000000402b3a 5b                             POP RBX\n .text:0000000000402b3b 5e                             POP RSI\n .text:0000000000402b3c 41 5c                          POP R12\n .text:0000000000402b3e c3                             RET\n\n__fastcall FUN_00402b40(longlong param_1)\n .text:0000000000402b40 48 83 ec 28                    SUB RSP,0x28\n .text:0000000000402b44 4c 8b 15 e5 28 00 00           MOV R10,qword ptr [0x00405430]\n .text:0000000000402b4b 45 31 c0                       XOR R8D,R8D\n .text:0000000000402b4e 66 41 81 3a 4d 5a              CMP word ptr [R10],0x5a4d\n .text:0000000000402b54 49 89 c9                       MOV R9,RCX\n .text:0000000000402b57 75 60                          JNZ 0x00402bb9\n .text:0000000000402b59 4c 89 d1                       MOV RCX,R10\n .text:0000000000402b5c e8 af fe ff ff                 CALL 0x00402a10\n .text:0000000000402b61 85 c0                          TEST EAX,EAX\n .text:0000000000402b63 74 54                          JZ 0x00402bb9\n .text:0000000000402b65 49 63 42 3c                    MOVSXD RAX,dword ptr [R10 + 0x3c]\n .text:0000000000402b69 4c 89 c9                       MOV RCX,R9\n .text:0000000000402b6c 4c 29 d1                       SUB RCX,R10\n .text:0000000000402b6f 49 01 c2                       ADD R10,RAX\n .text:0000000000402b72 41 0f b7 42 14                 MOVZX EAX,word ptr [R10 + 0x14]\n .text:0000000000402b77 4d 8d 44 02 18                 LEA R8,[R10 + RAX*0x1 + 0x18]\n .text:0000000000402b7c 41 0f b7 42 06                 MOVZX EAX,word ptr [R10 + 0x6]\n .text:0000000000402b81 85 c0                          TEST EAX,EAX\n .text:0000000000402b83 74 31                          JZ 0x00402bb6\n .text:0000000000402b85 83 e8 01                       SUB EAX,0x1\n .text:0000000000402b88 48 8d 04 80                    LEA RAX,[RAX + RAX*0x4]\n .text:0000000000402b8c 4d 8d 4c c0 28                 LEA R9,[R8 + RAX*0x8 + 0x28]\n .text:0000000000402b91 0f 1f 80 00 00 00 00           NOP dword ptr [RAX]\n .text:0000000000402b98 41 8b 50 0c                    MOV EDX,dword ptr [R8 + 0xc]\n .text:0000000000402b9c 48 89 d0                       MOV RAX,RDX\n .text:0000000000402b9f 48 39 d1                       CMP RCX,RDX\n .text:0000000000402ba2 72 09                          JC 0x00402bad\n .text:0000000000402ba4 41 03 40 08                    ADD EAX,dword ptr [R8 + 0x8]\n .text:0000000000402ba8 48 39 c1                       CMP RCX,RAX\n .text:0000000000402bab 72 0c                          JC 0x00402bb9\n .text:0000000000402bad 49 83 c0 28                    ADD R8,0x28\n .text:0000000000402bb1 4d 39 c8                       CMP R8,R9\n .text:0000000000402bb4 75 e2                          JNZ 0x00402b98\n .text:0000000000402bb6 45 31 c0                       XOR R8D,R8D\n .text:0000000000402bb9 4c 89 c0                       MOV RAX,R8\n .text:0000000000402bbc 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000402bc0 c3                             RET\n\n__fastcall FUN_00402bd0()\n .text:0000000000402bd0 48 83 ec 28                    SUB RSP,0x28\n .text:0000000000402bd4 48 8b 0d 55 28 00 00           MOV RCX,qword ptr [0x00405430]\n .text:0000000000402bdb 31 c0                          XOR EAX,EAX\n .text:0000000000402bdd 66 81 39 4d 5a                 CMP word ptr [RCX],0x5a4d\n .text:0000000000402be2 75 12                          JNZ 0x00402bf6\n .text:0000000000402be4 e8 27 fe ff ff                 CALL 0x00402a10\n .text:0000000000402be9 85 c0                          TEST EAX,EAX\n .text:0000000000402beb 74 09                          JZ 0x00402bf6\n .text:0000000000402bed 48 63 41 3c                    MOVSXD RAX,dword ptr [RCX + 0x3c]\n .text:0000000000402bf1 0f b7 44 08 06                 MOVZX EAX,word ptr [RAX + RCX*0x1 + 0x6]\n .text:0000000000402bf6 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000402bfa c3                             RET\n\n__fastcall FUN_00402c00(longlong param_1)\n .text:0000000000402c00 48 83 ec 28                    SUB RSP,0x28\n .text:0000000000402c04 45 31 c0                       XOR R8D,R8D\n .text:0000000000402c07 49 89 c9                       MOV R9,RCX\n .text:0000000000402c0a 48 8b 0d 1f 28 00 00           MOV RCX,qword ptr [0x00405430]\n .text:0000000000402c11 66 81 39 4d 5a                 CMP word ptr [RCX],0x5a4d\n .text:0000000000402c16 75 4c                          JNZ 0x00402c64\n .text:0000000000402c18 e8 f3 fd ff ff                 CALL 0x00402a10\n .text:0000000000402c1d 85 c0                          TEST EAX,EAX\n .text:0000000000402c1f 74 43                          JZ 0x00402c64\n .text:0000000000402c21 48 63 41 3c                    MOVSXD RAX,dword ptr [RCX + 0x3c]\n .text:0000000000402c25 48 01 c1                       ADD RCX,RAX\n .text:0000000000402c28 0f b7 41 14                    MOVZX EAX,word ptr [RCX + 0x14]\n .text:0000000000402c2c 4c 8d 44 01 18                 LEA R8,[RCX + RAX*0x1 + 0x18]\n .text:0000000000402c31 0f b7 41 06                    MOVZX EAX,word ptr [RCX + 0x6]\n .text:0000000000402c35 85 c0                          TEST EAX,EAX\n .text:0000000000402c37 74 28                          JZ 0x00402c61\n .text:0000000000402c39 83 e8 01                       SUB EAX,0x1\n .text:0000000000402c3c 48 8d 04 80                    LEA RAX,[RAX + RAX*0x4]\n .text:0000000000402c40 49 8d 44 c0 28                 LEA RAX,[R8 + RAX*0x8 + 0x28]\n .text:0000000000402c45 0f 1f 00                       NOP dword ptr [RAX]\n .text:0000000000402c48 41 f6 40 27 20                 TEST byte ptr [R8 + 0x27],0x20\n .text:0000000000402c4d 74 09                          JZ 0x00402c58\n .text:0000000000402c4f 4d 85 c9                       TEST R9,R9\n .text:0000000000402c52 74 10                          JZ 0x00402c64\n .text:0000000000402c54 49 83 e9 01                    SUB R9,0x1\n .text:0000000000402c58 49 83 c0 28                    ADD R8,0x28\n .text:0000000000402c5c 49 39 c0                       CMP R8,RAX\n .text:0000000000402c5f 75 e7                          JNZ 0x00402c48\n .text:0000000000402c61 45 31 c0                       XOR R8D,R8D\n .text:0000000000402c64 4c 89 c0                       MOV RAX,R8\n .text:0000000000402c67 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000402c6b c3                             RET\n\n__fastcall FUN_00402c70()\n .text:0000000000402c70 48 83 ec 28                    SUB RSP,0x28\n .text:0000000000402c74 48 8b 0d b5 27 00 00           MOV RCX,qword ptr [0x00405430]\n .text:0000000000402c7b 45 31 c0                       XOR R8D,R8D\n .text:0000000000402c7e 66 81 39 4d 5a                 CMP word ptr [RCX],0x5a4d\n .text:0000000000402c83 75 0b                          JNZ 0x00402c90\n .text:0000000000402c85 e8 86 fd ff ff                 CALL 0x00402a10\n .text:0000000000402c8a 85 c0                          TEST EAX,EAX\n .text:0000000000402c8c 4c 0f 45 c1                    CMOVNZ R8,RCX\n .text:0000000000402c90 4c 89 c0                       MOV RAX,R8\n .text:0000000000402c93 48 83 c4 28                    ADD RSP,0x28\n .text:0000000000402c97 c3                             RET\n\n__fastcall FUN_00402df0()\n .text:0000000000402df0 51                             PUSH RCX\n .text:0000000000402df1 50                             PUSH RAX\n .text:0000000000402df2 48 3d 00 10 00 00              CMP RAX,0x1000\n .text:0000000000402df8 48 8d 4c 24 18                 LEA RCX,[RSP + 0x18]\n .text:0000000000402dfd 72 19                          JC 0x00402e18\n .text:0000000000402dff 48 81 e9 00 10 00 00           SUB RCX,0x1000\n .text:0000000000402e06 48 83 09 00                    OR qword ptr [RCX],0x0\n .text:0000000000402e0a 48 2d 00 10 00 00              SUB RAX,0x1000\n .text:0000000000402e10 48 3d 00 10 00 00              CMP RAX,0x1000\n .text:0000000000402e16 77 e7                          JA 0x00402dff\n .text:0000000000402e18 48 29 c1                       SUB RCX,RAX\n .text:0000000000402e1b 48 83 09 00                    OR qword ptr [RCX],0x0\n .text:0000000000402e1f 58                             POP RAX\n .text:0000000000402e20 59                             POP RCX\n .text:0000000000402e21 c3                             RET\n\n__fastcall vfprintf(FILE * _File, char * _Format, va_list _ArgList)\n .text:0000000000402e30 ff 25 66 65 00 00              JMP qword ptr [0x0040939c]\n\n__fastcall strncmp(char * _Str1, char * _Str2, size_t _MaxCount)\n .text:0000000000402e38 ff 25 56 65 00 00              JMP qword ptr [0x00409394]\n\n__fastcall strlen(char * _Str)\n .text:0000000000402e40 ff 25 46 65 00 00              JMP qword ptr [0x0040938c]\n\n__fastcall sprintf(char * _Dest, char * _Format)\n .text:0000000000402e48 ff 25 36 65 00 00              JMP qword ptr [0x00409384]\n\n__fastcall signal(int param_1)\n .text:0000000000402e50 ff 25 26 65 00 00              JMP qword ptr [0x0040937c]\n\n__fastcall puts(char * _Str)\n .text:0000000000402e58 ff 25 16 65 00 00              JMP qword ptr [0x00409374]\n\n__fastcall printf(char * _Format)\n .text:0000000000402e60 ff 25 06 65 00 00              JMP qword ptr [0x0040936c]\n\n__fastcall memcpy(void * _Dst, void * _Src, size_t _Size)\n .text:0000000000402e68 ff 25 f6 64 00 00              JMP qword ptr [0x00409364]\n\n__fastcall malloc(size_t _Size)\n .text:0000000000402e70 ff 25 e6 64 00 00              JMP qword ptr [0x0040935c]\n\n__fastcall getenv(char * _VarName)\n .text:0000000000402e78 ff 25 d6 64 00 00              JMP qword ptr [0x00409354]\n\n__fastcall fwrite(void * _Str, size_t _Size, size_t _Count, FILE * _File)\n .text:0000000000402e80 ff 25 c6 64 00 00              JMP qword ptr [0x0040934c]\n\n__fastcall free(void * _Memory)\n .text:0000000000402e88 ff 25 b6 64 00 00              JMP qword ptr [0x00409344]\n\n__fastcall fprintf(FILE * _File, char * _Format)\n .text:0000000000402e90 ff 25 a6 64 00 00              JMP qword ptr [0x0040933c]\n\n__fastcall fopen(char * _Filename, char * _Mode)\n .text:0000000000402e98 ff 25 96 64 00 00              JMP qword ptr [0x00409334]\n\n__fastcall exit(int _Code)\n .text:0000000000402ea0 ff 25 86 64 00 00              JMP qword ptr [0x0040932c]\n\n__fastcall abort()\n .text:0000000000402eb0 ff 25 66 64 00 00              JMP qword ptr [0x0040931c]\n\n__fastcall _onexit(_onexit_t _Func)\n .text:0000000000402eb8 ff 25 56 64 00 00              JMP qword ptr [0x00409314]\n\n__fastcall _initterm()\n .text:0000000000402ec0 ff 25 46 64 00 00              JMP qword ptr [0x0040930c]\n\n__fastcall _cexit()\n .text:0000000000402ec8 ff 25 2e 64 00 00              JMP qword ptr [0x004092fc]\n\n__fastcall _amsg_exit(int param_1)\n .text:0000000000402ed0 ff 25 1e 64 00 00              JMP qword ptr [0x004092f4]\n\n__fastcall __set_app_type(int param_1)\n .text:0000000000402ee0 ff 25 f6 63 00 00              JMP qword ptr [0x004092dc]\n\n__fastcall FUN_00402f00(uint param_1)\n .text:0000000000402f00 53                             PUSH RBX\n .text:0000000000402f01 48 83 ec 20                    SUB RSP,0x20\n .text:0000000000402f05 89 cb                          MOV EBX,ECX\n .text:0000000000402f07 e8 54 00 00 00                 CALL 0x00402f60\n .text:0000000000402f0c 89 d9                          MOV ECX,EBX\n .text:0000000000402f0e 48 8d 14 49                    LEA RDX,[RCX + RCX*0x2]\n .text:0000000000402f12 48 c1 e2 04                    SHL RDX,0x4\n .text:0000000000402f16 48 01 d0                       ADD RAX,RDX\n .text:0000000000402f19 48 83 c4 20                    ADD RSP,0x20\n .text:0000000000402f1d 5b                             POP RBX\n .text:0000000000402f1e c3                             RET\n\n__fastcall FUN_00402f30(undefined8 param_1)\n .text:0000000000402f30 48 89 c8                       MOV RAX,RCX\n .text:0000000000402f33 48 87 05 16 5a 00 00           XCHG qword ptr [0x00408950],RAX\n .text:0000000000402f3a c3                             RET\n\n__fastcall FUN_00402f40()\n .text:0000000000402f40 48 8b 05 09 25 00 00           MOV RAX,qword ptr [0x00405450]\n .text:0000000000402f47 48 8b 00                       MOV RAX,qword ptr [RAX]\n .text:0000000000402f4a c3                             RET\n\n__fastcall FUN_00402f50()\n .text:0000000000402f50 48 8b 05 09 25 00 00           MOV RAX,qword ptr [0x00405460]\n .text:0000000000402f57 48 8b 00                       MOV RAX,qword ptr [RAX]\n .text:0000000000402f5a c3                             RET\n\n__fastcall __iob_func()\n .text:0000000000402f60 ff 25 66 63 00 00              JMP qword ptr [0x004092cc]\n"}}